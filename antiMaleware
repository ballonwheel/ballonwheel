Here is a **Debian-compatible Bash script** that performs the following:

1. **Scans all running programs and daemons** and logs their information.
2. **Examines the log for suspicious entries** (e.g., common malware indicators).

---

### ðŸ”§ Script: `scan_processes.sh`

```bash
#!/bin/bash

LOG_DIR="/var/log/process_scan"
LOG_FILE="$LOG_DIR/scan_$(date +%F_%T).log"
SUSPICIOUS_LOG="$LOG_DIR/suspicious_$(date +%F_%T).log"

mkdir -p "$LOG_DIR"

echo "[*] Scanning running processes and daemons..."
echo "Scan started at: $(date)" > "$LOG_FILE"
ps auxfww >> "$LOG_FILE"
echo -e "\nList of loaded daemons (systemd):" >> "$LOG_FILE"
systemctl list-units --type=service --state=running >> "$LOG_FILE"

echo "[*] Searching for suspicious entries..."
# Define some simple suspicious keywords (can be extended)
SUSPICIOUS_KEYWORDS=("cryptominer" "bitcoin" "botnet" "minerd" "malware" "suspicious" "trojan" "backdoor" "/tmp" "/dev/shm" "nc " "wget " "curl ")

touch "$SUSPICIOUS_LOG"
echo "Suspicious entries found at $(date):" > "$SUSPICIOUS_LOG"

for keyword in "${SUSPICIOUS_KEYWORDS[@]}"; do
    grep -i "$keyword" "$LOG_FILE" >> "$SUSPICIOUS_LOG"
done

# Show results
if [[ -s "$SUSPICIOUS_LOG" ]]; then
    echo "[!] Suspicious activity detected. See: $SUSPICIOUS_LOG"
else
    echo "[âœ“] No suspicious activity found."
    rm "$SUSPICIOUS_LOG"
fi

echo "Full scan log saved at: $LOG_FILE"
```

---

### âœ… How to Use

1. Save the script as `scan_processes.sh`
2. Make it executable:

   ```bash
   chmod +x scan_processes.sh
   ```
3. Run with root or sudo:

   ```bash
   sudo ./scan_processes.sh
   ```

---

### ðŸ”’ Notes

* This script does **basic** keyword-based detection.
* For **stronger detection**, consider using tools like:

  * [`chkrootkit`](https://www.chkrootkit.org/)
  * [`rkhunter`](https://rkhunter.sourceforge.net/)
  * [`lynis`](https://cisofy.com/lynis/)
  * Or integrate with `ClamAV` for scanning malicious binaries.

Would you like to extend this to automatically kill or isolate suspicious processes?
