



attekintes:
Tök jogos a zavar — tisztázzuk röviden:

## Fogalmak (itt nálunk)

* **MQTT broker = szerver**: a **Mosquitto démon** (service) fut **#3-as RPi-n**. Ő a központ.
* **MQTT kliens = publisher/subscriber**: az **#1, #2, #4, #5, #6** gépek (és akár #3 is mint mérő) csak **mosquitto-clients**-et használnak (`mosquitto_pub`, `mosquitto_sub`). NEM fut rajtuk Mosquitto démon.
* **SSH -R (reverse)**: #3 felhúz egy visszacsatornát a VPS-re → a VPS **loopback** portja (127.0.0.1:31883) **átmutat** #3:1883-ra (a brokerre).
* **SSH -L (local forward)**: a kliensek (#1,2,4,5,6) a saját gépükön nyitnak **127.0.0.1:18883**-at, ami a VPS 127.0.0.1:31883-ára megy → onnan #3:1883-ra.

ASCII vázlat:

```
#3 (broker: mosquitto:1883)
   └─SSH -R→ VPS:127.0.0.1:31883  (csak loopbackon hallgat)

#1,#2,#4,#5,#6 (kliens gépek)
   └─SSH -L→ 127.0.0.1:18883 → VPS:127.0.0.1:31883 → #3:1883
                  ^ ezen a helyi por ton pub/sub-olnak a kliensek
```

A korábbi unit neve “autossh-**broker-forward**.service” félreérthető volt (mintha a broker futna a kliensen). Hívd inkább:

* **#3-on**: `autossh-mqtt-reverse.service`  (mert -R)
* **klienseken**: `autossh-mqtt-forward.service` (mert -L)

## Mit hol telepítesz?

* **#3 (szerver)**: `mosquitto` + `mosquitto-clients` + ACL/jelszó, és **reverse tunnel** (-R).
* **VPS**: csak **SSH** (AllowTcpForwarding yes). Nem fut mosquitto.
* **#1,#2,#4,#5,#6 (kliensek)**: **csak** `mosquitto-clients` + **local forward** (-L). NINCS mosquitto démon.

## Példák (végleges, érthető nevekkel)

### #3 (broker gép, Óhegy)

Mosquitto + reverse tunnel:

```ini
# /etc/systemd/system/autossh-mqtt-reverse.service
[Unit]
Description=Reverse SSH: VPS:127.0.0.1:31883 -> rpi3:1883
After=network-online.target
Wants=network-online.target

[Service]
Environment=AUTOSSH_GATETIME=0
User=imre
ExecStart=/usr/bin/autossh -M 0 -N \
  -o ExitOnForwardFailure=yes \
  -o ServerAliveInterval=30 -o ServerAliveCountMax=3 \
  -R 127.0.0.1:31883:localhost:1883 \
  relay@<VPS_HOST_OR_IP>
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
```

Indítás:

```bash
sudo systemctl daemon-reload
sudo systemctl enable --now autossh-mqtt-reverse.service
# VPS-en ellenőrzés:
ssh relay@<VPS> "ss -ltnp | grep 31883"
```

### Kliens gépek (#1, #2, #4, #5, #6)

Local forward (helyi 18883 → VPS:31883):

```ini
# /etc/systemd/system/autossh-mqtt-forward.service
[Unit]
Description=Local SSH tunnel to MQTT broker via VPS (127.0.0.1:18883 -> VPS:127.0.0.1:31883 -> rpi3:1883)
After=network-online.target
Wants=network-online.target

[Service]
Environment=AUTOSSH_GATETIME=0
User=imre
ExecStart=/usr/bin/autossh -M 0 -N \
  -o ExitOnForwardFailure=yes \
  -o ServerAliveInterval=30 -o ServerAliveCountMax=3 \
  -L 127.0.0.1:18883:127.0.0.1:31883 \
  relay@<VPS_HOST_OR_IP>
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
```

Indítás + teszt:

```bash
sudo systemctl daemon-reload
sudo systemctl enable --now autossh-mqtt-forward.service
ss -ltnp | grep 18883   # LISTEN-nek kell lennie

# innentől a KLIENS ezen a gépen így éri el a BROKERT:
mosquitto_pub -h 127.0.0.1 -p 18883 -u rpi1 -P '<jelszo>' \
  -t 'sites/tisza/rpi1/test' -m 'hello'
```

### Publish script (klienseken)

```bash
BROKER_HOST="127.0.0.1"
BROKER_PORT=18883
USER="$(hostname)"               # pl. rpi1
PASS_FILE="/etc/soil_mqtt_pass"  # ide tetted a jelszót
mosquitto_pub -h "$BROKER_HOST" -p "$BROKER_PORT" \
  -u "$USER" -P "$(cat "$PASS_FILE")" \
  -t "sites/tisza/${USER}/soil" -m "$line" -r
```

### Collector (#3-on)

A collector a **helyi** brokerre csatlakozik (1883), külön `collector` userrel:

```bash
mosquitto_sub -h localhost -p 1883 -u collector -P "$(cat /etc/mqtt_collector_pass)" \
  -v -t "sites/tisza/+/soil" -t "sites/tisza/+/tuya/#" | while read -r line; do
  ...
done
```

## Gyorsteszt-sorrend (három lépés)

1. **#3 → VPS reverse** él?
   `ssh relay@<VPS> "ss -ltnp | grep 31883"`
2. **Kliens #X → VPS local forward** él?
   `ss -ltnp | grep 18883`
3. **Pub/Sub megy a kliensen 127.0.0.1:18883-ra?**
   `mosquitto_pub …` majd `mosquitto_sub …` ugyanarra a prefixre.

Így a „broker” szó mindig a #3-on futó **Mosquitto szervert** jelenti; a klienseken csak **tunnel** és **mosquitto-clients** van. Ha szeretnéd, átnevezem neked az összes korábbi unit-mintát ezekre a tiszta nevekre egyben.




***********

jah, nem mondtam, h VPS-t hasznalok: #2 #4 #5 vannak tiszafureden es #3 #1 #6 vannak ohegyen, reverse ssh-t szeretne'k hasznalni es a VPS csak kozvetit, hogyan jutok el ide? valtozk valami a fentiekbol?



Igen, itt annyi változik, hogy a broker (#3) **nem látszik közvetlenül** az interneten, hanem **reverse SSH**-on keresztül érhető el a VPS-en át. Így a VPS csak „kapu”, **csak 22-es port** kell kifelé/ befelé. A mosquitto továbbra is a #3-on fut, az SQLite collector is ott marad.

Alább egy biztos recept.

# Áttekintés

* **#3 (Óhegy)**: Mosquitto + collector. **autossh -R** felhúz egy *reverse* portot a VPS-re: `VPS:127.0.0.1:31883 → #3:1883`.
* **#1 #6 (Óhegy) + #2 #4 #5 (Tiszafüred)**: mindegyik csinál **autossh -L** *local forwardot* a VPS-re: `helyi 18883 → VPS:127.0.0.1:31883 → #3:1883`. Így minden kliens **localhost:18883**-ra csatlakozik.
* **VPS**: nem fut Mosquitto, csak SSH. Nincs kinyitva 1883 a net felé.

---

# 0) Előkészület a VPS-en (egyszer)

```bash
# a VPS-en
sudo adduser relay
sudo usermod -aG sudo relay   # ha kell admin
# /etc/ssh/sshd_config -ban legyen:
# AllowTcpForwarding yes
# GatewayPorts no   # alapból no, maradjon
sudo systemctl restart ssh
```

(Extra biztonság: külön user #3-nak és a klienseknek; most egyszerűsítünk: mind “relay”-t használ.)

---

# 1) #3 (szerver Pi, Óhegy): Mosquitto + collector + reverse tunnel

## 1.1 Mosquitto + SQLite (ha még nincs)

Ugyanaz, mint korábban: mosquitto + ACL + passwd (#1..#6 user), `mqtt_to_sqlite.service`, DB séma. (Ezen nem kell változtatni.)

## 1.2 SSH kulcs és known\_hosts (#3 → VPS)

```bash
ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ""
ssh-copy-id -i ~/.ssh/id_ed25519.pub relay@<VPS_HOSTNAME_VAGY_IP>
ssh-keyscan -H <VPS_HOSTNAME_VAGY_IP> >> ~/.ssh/known_hosts
sudo apt-get install -y autossh
```

## 1.3 Reverse tunnel systemd unit (#3 → VPS)

`/etc/systemd/system/autossh-rpi3-reverse.service`:

```ini
[Unit]
Description=Reverse SSH tunnel (VPS:127.0.0.1:31883 -> rpi3:1883)
After=network-online.target
Wants=network-online.target

[Service]
ExecStart=/usr/bin/autossh -M 0 -N \
  -o "ServerAliveInterval=30" -o "ServerAliveCountMax=3" \
  -R 127.0.0.1:31883:localhost:1883 \
  relay@<VPS_HOSTNAME_VAGY_IP>
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
```

Aktiválás:

```bash
sudo systemctl daemon-reload
sudo systemctl enable --now autossh-rpi3-reverse.service
```

**Teszt (#3-on):**

```bash
ssh relay@<VPS> "nc -z 127.0.0.1 31883 && echo OK || echo FAIL"
# OK = a reverse port él a VPS loopbackon
```

---

# 2) Kliens Pi-k (#1 #2 #4 #5 #6): local forward a VPS-re

## 2.1 SSH kulcs + autossh

Minden kliensen:

```bash
ssh-keygen -t ed25519 -f ~/.ssh/id_ed25519 -N ""
ssh-copy-id -i ~/.ssh/id_ed25519.pub relay@<VPS>
ssh-keyscan -H <VPS> >> ~/.ssh/known_hosts
sudo apt-get install -y autossh mosquitto-clients
```

## 2.2 Local forward unit (helyi 18883 → VPS:127.0.0.1:31883)

`/etc/systemd/system/autossh-broker-forward.service`:

```ini
[Unit]
Description=Local SSH tunnel to broker via VPS (localhost:18883 -> VPS:127.0.0.1:31883 -> rpi3:1883)
After=network-online.target
Wants=network-online.target

[Service]
ExecStart=/usr/bin/autossh -M 0 -N \
  -o "ServerAliveInterval=30" -o "ServerAliveCountMax=3" \
  -L 127.0.0.1:18883:127.0.0.1:31883 \
  relay@<VPS_HOSTNAME_VAGY_IP>
Restart=always
RestartSec=5

[Install]
WantedBy=multi-user.target
```

Aktiválás:

```bash
sudo systemctl daemon-reload
sudo systemctl enable --now autossh-broker-forward.service
```

**Teszt (kliensen):**

```bash
mosquitto_sub -h 127.0.0.1 -p 18883 -t '$SYS/#' -v -u rpi1 -P '<a_rpi1_mosquitto_jelszavad>'
# (felhasználónév/jelszó a #3 mosquitto-jában létrehozott)
```

> Ha #1 és #6 ugyanazon a helyi hálón vannak, **akkor is** mehetnek ezen a tunnel-en; nem kell külön portnyitás.

---

# 3) Publikáló scriptek módosítása

A klienseken (nem #3):

* `BROKER_HOST=127.0.0.1`
* `BROKER_PORT=18883`

A #3-on:

* `BROKER_HOST=127.0.0.1`
* `BROKER_PORT=1883`  *(vagy ott is csinálhatsz -L-t és akkor egységesen 18883)*

Példa módosítás `soil_publish.sh`-ban:

```bash
BROKER_HOST="127.0.0.1"
BROKER_PORT=18883    # #3-on 1883
USER="$(hostname)"   # rpi1..rpi6
PASS_FILE="/etc/soil_mqtt_pass"
...
mosquitto_pub -h "$BROKER_HOST" -p "$BROKER_PORT" \
  -u "$USER" -P "$(cat "$PASS_FILE")" \
  -t "$topic" -m "$line" -r
```

---

# 4) Mi változik a korábbiakhoz képest?

* **Mosquitto/SQLite helye**: marad #3-on.
* **VPS szerepe**: csak SSH relay. **Nincs 1883 nyilvánosan**, csak `127.0.0.1:31883` a VPS-en.
* **Biztonság**: minden MQTT kapcsolat **SSH-on** megy át, kívülről csak a **22-es port** látszik a VPS-en.
* **ACL/jelszavak**: változatlanul a #3 mosquitto kezeli. A kliensek ugyanúgy rpi1..rpi6 userrel jelentkeznek be, csak a hálózat SSH-n át megy.

---

# 5) Hibakeresési jegyzetek

* A #3 reverse port él-e a VPS-en?

  ```bash
  ssh relay@<VPS> "ss -ltnp | grep 31883"
  ```
* Kliensen nyitva van-e a local forward?

  ```bash
  ss -ltnp | grep 18883
  ```
* MQTT hitelesítés rendben?

  ```bash
  mosquitto_pub -h 127.0.0.1 -p 18883 -u rpi2 -P '<pwd>' -t 'test' -m 'hello'
  ```
* Collector fut-e #3-on?

  ```bash
  sudo systemctl status mqtt-to-sqlite.service
  sqlite3 /srv/iot/plant.db 'SELECT COUNT(*) FROM soil;'
  ```

---

Ha szeretnéd, adok kész **unit fájlokat** mind a hat géphez kitöltve (#1..#6 hostnevekkel), plusz egy kis **make install** scriptet, ami felteszi a tunnelt és átírja a publish scripteket a megfelelő portra.




