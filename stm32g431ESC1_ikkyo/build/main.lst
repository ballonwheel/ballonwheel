ARM GAS  /tmp/cc4xqBG2.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemClock_Config,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SystemClock_Config
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	SystemClock_Config:
  28              	.LFB1467:
  29              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  23:Src/main.c    **** /* USER CODE BEGIN Includes */
  24:Src/main.c    **** 
  25:Src/main.c    **** /* USER CODE END Includes */
  26:Src/main.c    **** 
  27:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  28:Src/main.c    **** /* USER CODE BEGIN PTD */
  29:Src/main.c    **** 
ARM GAS  /tmp/cc4xqBG2.s 			page 2


  30:Src/main.c    **** /* USER CODE END PTD */
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN PD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* USER CODE END PD */
  36:Src/main.c    **** 
  37:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  38:Src/main.c    **** /* USER CODE BEGIN PM */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* USER CODE END PM */
  41:Src/main.c    **** 
  42:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  43:Src/main.c    **** ADC_HandleTypeDef hadc1;
  44:Src/main.c    **** ADC_HandleTypeDef hadc2;
  45:Src/main.c    **** #if defined(CORDIC)
  46:Src/main.c    **** #warning "CORDIC def"
  47:Src/main.c    **** #else
  48:Src/main.c    **** #warning "no CORDIC def"
  49:Src/main.c    **** #endif
  50:Src/main.c    **** CORDIC_HandleTypeDef hcordic;
  51:Src/main.c    **** 
  52:Src/main.c    **** OPAMP_HandleTypeDef hopamp1;
  53:Src/main.c    **** OPAMP_HandleTypeDef hopamp2;
  54:Src/main.c    **** OPAMP_HandleTypeDef hopamp3;
  55:Src/main.c    **** 
  56:Src/main.c    **** TIM_HandleTypeDef htim1;
  57:Src/main.c    **** TIM_HandleTypeDef htim2;
  58:Src/main.c    **** 
  59:Src/main.c    **** UART_HandleTypeDef huart2;
  60:Src/main.c    **** DMA_HandleTypeDef hdma_usart2_rx;
  61:Src/main.c    **** DMA_HandleTypeDef hdma_usart2_tx;
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE BEGIN PV */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* USER CODE END PV */
  66:Src/main.c    **** 
  67:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  68:Src/main.c    **** void SystemClock_Config(void);
  69:Src/main.c    **** static void MX_GPIO_Init(void);
  70:Src/main.c    **** static void MX_DMA_Init(void);
  71:Src/main.c    **** static void MX_ADC1_Init(void);
  72:Src/main.c    **** static void MX_ADC2_Init(void);
  73:Src/main.c    **** static void MX_CORDIC_Init(void);
  74:Src/main.c    **** static void MX_OPAMP1_Init(void);
  75:Src/main.c    **** static void MX_OPAMP2_Init(void);
  76:Src/main.c    **** static void MX_OPAMP3_Init(void);
  77:Src/main.c    **** static void MX_TIM1_Init(void);
  78:Src/main.c    **** static void MX_TIM2_Init(void);
  79:Src/main.c    **** static void MX_USART2_UART_Init(void);
  80:Src/main.c    **** static void MX_NVIC_Init(void);
  81:Src/main.c    **** /* USER CODE BEGIN PFP */
  82:Src/main.c    **** 
  83:Src/main.c    **** /* USER CODE END PFP */
  84:Src/main.c    **** 
  85:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  86:Src/main.c    **** /* USER CODE BEGIN 0 */
ARM GAS  /tmp/cc4xqBG2.s 			page 3


  87:Src/main.c    **** 
  88:Src/main.c    **** /* USER CODE END 0 */
  89:Src/main.c    **** 
  90:Src/main.c    **** /**
  91:Src/main.c    ****   * @brief  The application entry point.
  92:Src/main.c    ****   * @retval int
  93:Src/main.c    ****   */
  94:Src/main.c    **** int main(void)
  95:Src/main.c    **** {
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE BEGIN 1 */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* USER CODE END 1 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Src/main.c    ****   HAL_Init();
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE BEGIN Init */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* USER CODE END Init */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Configure the system clock */
 111:Src/main.c    ****   SystemClock_Config();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END SysInit */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Initialize all configured peripherals */
 118:Src/main.c    ****   MX_GPIO_Init();
 119:Src/main.c    ****   MX_DMA_Init();
 120:Src/main.c    ****   MX_ADC1_Init();
 121:Src/main.c    ****   MX_ADC2_Init();
 122:Src/main.c    ****   MX_CORDIC_Init();
 123:Src/main.c    ****   MX_OPAMP1_Init();
 124:Src/main.c    ****   MX_OPAMP2_Init();
 125:Src/main.c    ****   MX_OPAMP3_Init();
 126:Src/main.c    ****   MX_TIM1_Init();
 127:Src/main.c    ****   MX_TIM2_Init();
 128:Src/main.c    ****   MX_USART2_UART_Init();
 129:Src/main.c    ****   MX_MotorControl_Init();
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* Initialize interrupts */
 132:Src/main.c    ****   MX_NVIC_Init();
 133:Src/main.c    ****   /* USER CODE BEGIN 2 */
 134:Src/main.c    **** 
 135:Src/main.c    ****   /* USER CODE END 2 */
 136:Src/main.c    **** 
 137:Src/main.c    ****   /* Infinite loop */
 138:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 139:Src/main.c    ****   while (1)
 140:Src/main.c    ****   {
 141:Src/main.c    ****     /* USER CODE END WHILE */
 142:Src/main.c    **** 
 143:Src/main.c    ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/cc4xqBG2.s 			page 4


 144:Src/main.c    ****   }
 145:Src/main.c    ****   /* USER CODE END 3 */
 146:Src/main.c    **** }
 147:Src/main.c    **** 
 148:Src/main.c    **** /**
 149:Src/main.c    ****   * @brief System Clock Configuration
 150:Src/main.c    ****   * @retval None
 151:Src/main.c    ****   */
 152:Src/main.c    **** void SystemClock_Config(void)
 153:Src/main.c    **** {
  30              		.loc 1 153 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 80
  33              		@ frame_needed = 0, uses_anonymous_args = 0
 154:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  34              		.loc 1 154 3 view .LVU1
 153:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  35              		.loc 1 153 1 is_stmt 0 view .LVU2
  36 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 20
  39              		.cfi_offset 4, -20
  40              		.cfi_offset 5, -16
  41              		.cfi_offset 6, -12
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 95B0     		sub	sp, sp, #84
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 104
  47              		.loc 1 154 22 view .LVU3
  48 0004 3822     		movs	r2, #56
  49 0006 0021     		movs	r1, #0
  50 0008 06A8     		add	r0, sp, #24
  51 000a FFF7FEFF 		bl	memset
  52              	.LVL0:
 155:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  53              		.loc 1 155 3 is_stmt 1 view .LVU4
  54              		.loc 1 155 22 is_stmt 0 view .LVU5
  55 000e 0023     		movs	r3, #0
 156:Src/main.c    **** 
 157:Src/main.c    ****   /** Configure the main internal regulator output voltage
 158:Src/main.c    ****   */
 159:Src/main.c    ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
  56              		.loc 1 159 3 view .LVU6
  57 0010 1846     		mov	r0, r3
 155:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  58              		.loc 1 155 22 view .LVU7
  59 0012 CDE90033 		strd	r3, r3, [sp]
  60 0016 CDE90233 		strd	r3, r3, [sp, #8]
  61 001a 0493     		str	r3, [sp, #16]
  62              		.loc 1 159 3 is_stmt 1 view .LVU8
 160:Src/main.c    **** 
 161:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
 162:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 163:Src/main.c    ****   */
 164:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  63              		.loc 1 164 36 is_stmt 0 view .LVU9
ARM GAS  /tmp/cc4xqBG2.s 			page 5


  64 001c 0126     		movs	r6, #1
 159:Src/main.c    **** 
  65              		.loc 1 159 3 view .LVU10
  66 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
  67              	.LVL1:
  68              		.loc 1 164 3 is_stmt 1 view .LVU11
 165:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  69              		.loc 1 165 3 view .LVU12
 164:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  70              		.loc 1 164 36 is_stmt 0 view .LVU13
  71 0022 4FF48037 		mov	r7, #65536
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  72              		.loc 1 166 34 view .LVU14
  73 0026 0223     		movs	r3, #2
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  74              		.loc 1 167 35 view .LVU15
  75 0028 0324     		movs	r4, #3
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 85;
  76              		.loc 1 169 30 view .LVU16
  77 002a 5521     		movs	r1, #85
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV8;
  78              		.loc 1 170 30 view .LVU17
  79 002c 0822     		movs	r2, #8
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 172:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 173:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  80              		.loc 1 173 7 view .LVU18
  81 002e 06A8     		add	r0, sp, #24
 164:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  82              		.loc 1 164 36 view .LVU19
  83 0030 CDE90667 		strd	r6, [sp, #24]
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  84              		.loc 1 166 3 is_stmt 1 view .LVU20
 166:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  85              		.loc 1 166 34 is_stmt 0 view .LVU21
  86 0034 0D93     		str	r3, [sp, #52]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
  87              		.loc 1 167 3 is_stmt 1 view .LVU22
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 85;
  88              		.loc 1 168 30 is_stmt 0 view .LVU23
  89 0036 0F93     		str	r3, [sp, #60]
 172:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  90              		.loc 1 172 30 view .LVU24
  91 0038 CDE91233 		strd	r3, r3, [sp, #72]
 167:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
  92              		.loc 1 167 35 view .LVU25
  93 003c 0E94     		str	r4, [sp, #56]
 168:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 85;
  94              		.loc 1 168 3 is_stmt 1 view .LVU26
 169:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV8;
  95              		.loc 1 169 3 view .LVU27
 170:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
  96              		.loc 1 170 30 is_stmt 0 view .LVU28
  97 003e CDE91012 		strd	r1, r2, [sp, #64]
 171:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
  98              		.loc 1 171 3 is_stmt 1 view .LVU29
ARM GAS  /tmp/cc4xqBG2.s 			page 6


 172:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  99              		.loc 1 172 3 view .LVU30
 100              		.loc 1 173 3 view .LVU31
 101              		.loc 1 173 7 is_stmt 0 view .LVU32
 102 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 103              	.LVL2:
 104              		.loc 1 173 6 view .LVU33
 105 0046 08B1     		cbz	r0, .L2
 174:Src/main.c    ****   {
 175:Src/main.c    ****     Error_Handler();
 106              		.loc 1 175 5 is_stmt 1 view .LVU34
 107              	.LBB141:
 108              	.LBI141:
 176:Src/main.c    ****   }
 177:Src/main.c    **** 
 178:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 179:Src/main.c    ****   */
 180:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 181:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 182:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 183:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 184:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 185:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 186:Src/main.c    **** 
 187:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 188:Src/main.c    ****   {
 189:Src/main.c    ****     Error_Handler();
 190:Src/main.c    ****   }
 191:Src/main.c    **** 
 192:Src/main.c    ****   /** Enables the Clock Security System
 193:Src/main.c    ****   */
 194:Src/main.c    ****   HAL_RCC_EnableCSS();
 195:Src/main.c    **** }
 196:Src/main.c    **** 
 197:Src/main.c    **** /**
 198:Src/main.c    ****   * @brief NVIC Configuration.
 199:Src/main.c    ****   * @retval None
 200:Src/main.c    ****   */
 201:Src/main.c    **** static void MX_NVIC_Init(void)
 202:Src/main.c    **** {
 203:Src/main.c    ****   /* USART2_IRQn interrupt configuration */
 204:Src/main.c    ****   HAL_NVIC_SetPriority(USART2_IRQn, 3, 1);
 205:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART2_IRQn);
 206:Src/main.c    ****   /* DMA1_Channel1_IRQn interrupt configuration */
 207:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel1_IRQn, 3, 0);
 208:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 209:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 210:Src/main.c    ****   HAL_NVIC_SetPriority(TIM2_IRQn, 3, 0);
 211:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 212:Src/main.c    ****   /* TIM1_BRK_TIM15_IRQn interrupt configuration */
 213:Src/main.c    ****   HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 4, 1);
 214:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 215:Src/main.c    ****   /* TIM1_UP_TIM16_IRQn interrupt configuration */
 216:Src/main.c    ****   HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 0, 0);
 217:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 218:Src/main.c    ****   /* ADC1_2_IRQn interrupt configuration */
 219:Src/main.c    ****   HAL_NVIC_SetPriority(ADC1_2_IRQn, 2, 0);
ARM GAS  /tmp/cc4xqBG2.s 			page 7


 220:Src/main.c    ****   HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 221:Src/main.c    ****   /* EXTI15_10_IRQn interrupt configuration */
 222:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI15_10_IRQn, 3, 0);
 223:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 224:Src/main.c    **** }
 225:Src/main.c    **** 
 226:Src/main.c    **** /**
 227:Src/main.c    ****   * @brief ADC1 Initialization Function
 228:Src/main.c    ****   * @param None
 229:Src/main.c    ****   * @retval None
 230:Src/main.c    ****   */
 231:Src/main.c    **** static void MX_ADC1_Init(void)
 232:Src/main.c    **** {
 233:Src/main.c    **** 
 234:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   ADC_MultiModeTypeDef multimode = {0};
 239:Src/main.c    ****   ADC_InjectionConfTypeDef sConfigInjected = {0};
 240:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 241:Src/main.c    **** 
 242:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 243:Src/main.c    **** 
 244:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 245:Src/main.c    **** 
 246:Src/main.c    ****   /** Common config
 247:Src/main.c    ****   */
 248:Src/main.c    ****   hadc1.Instance = ADC1;
 249:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 250:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 251:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_LEFT;
 252:Src/main.c    ****   hadc1.Init.GainCompensation = 0;
 253:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 254:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 255:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 256:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 257:Src/main.c    ****   hadc1.Init.NbrOfConversion = 2;
 258:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 259:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 260:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 261:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 262:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 263:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 264:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 265:Src/main.c    ****   {
 266:Src/main.c    ****     Error_Handler();
 267:Src/main.c    ****   }
 268:Src/main.c    **** 
 269:Src/main.c    ****   /** Configure the ADC multi-mode
 270:Src/main.c    ****   */
 271:Src/main.c    ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 272:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 273:Src/main.c    ****   {
 274:Src/main.c    ****     Error_Handler();
 275:Src/main.c    ****   }
 276:Src/main.c    **** 
ARM GAS  /tmp/cc4xqBG2.s 			page 8


 277:Src/main.c    ****   /** Configure Injected Channel
 278:Src/main.c    ****   */
 279:Src/main.c    ****   sConfigInjected.InjectedChannel = ADC_CHANNEL_3;
 280:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 281:Src/main.c    ****   sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_6CYCLES_5;
 282:Src/main.c    ****   sConfigInjected.InjectedSingleDiff = ADC_SINGLE_ENDED;
 283:Src/main.c    ****   sConfigInjected.InjectedOffsetNumber = ADC_OFFSET_NONE;
 284:Src/main.c    ****   sConfigInjected.InjectedOffset = 0;
 285:Src/main.c    ****   sConfigInjected.InjectedNbrOfConversion = 2;
 286:Src/main.c    ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 287:Src/main.c    ****   sConfigInjected.AutoInjectedConv = DISABLE;
 288:Src/main.c    ****   sConfigInjected.QueueInjectedContext = DISABLE;
 289:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_CC4;
 290:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 291:Src/main.c    ****   sConfigInjected.InjecOversamplingMode = DISABLE;
 292:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 293:Src/main.c    ****   {
 294:Src/main.c    ****     Error_Handler();
 295:Src/main.c    ****   }
 296:Src/main.c    **** 
 297:Src/main.c    ****   /** Configure Injected Channel
 298:Src/main.c    ****   */
 299:Src/main.c    ****   sConfigInjected.InjectedChannel = ADC_CHANNEL_12;
 300:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_2;
 301:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 302:Src/main.c    ****   {
 303:Src/main.c    ****     Error_Handler();
 304:Src/main.c    ****   }
 305:Src/main.c    **** 
 306:Src/main.c    ****   /** Configure Regular Channel
 307:Src/main.c    ****   */
 308:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_1;
 309:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 310:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_47CYCLES_5;
 311:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 312:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 313:Src/main.c    ****   sConfig.Offset = 0;
 314:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 315:Src/main.c    ****   {
 316:Src/main.c    ****     Error_Handler();
 317:Src/main.c    ****   }
 318:Src/main.c    **** 
 319:Src/main.c    ****   /** Configure Regular Channel
 320:Src/main.c    ****   */
 321:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_5;
 322:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 323:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 324:Src/main.c    ****   {
 325:Src/main.c    ****     Error_Handler();
 326:Src/main.c    ****   }
 327:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 330:Src/main.c    **** 
 331:Src/main.c    **** }
 332:Src/main.c    **** 
 333:Src/main.c    **** /**
ARM GAS  /tmp/cc4xqBG2.s 			page 9


 334:Src/main.c    ****   * @brief ADC2 Initialization Function
 335:Src/main.c    ****   * @param None
 336:Src/main.c    ****   * @retval None
 337:Src/main.c    ****   */
 338:Src/main.c    **** static void MX_ADC2_Init(void)
 339:Src/main.c    **** {
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* USER CODE BEGIN ADC2_Init 0 */
 342:Src/main.c    **** 
 343:Src/main.c    ****   /* USER CODE END ADC2_Init 0 */
 344:Src/main.c    **** 
 345:Src/main.c    ****   ADC_InjectionConfTypeDef sConfigInjected = {0};
 346:Src/main.c    **** 
 347:Src/main.c    ****   /* USER CODE BEGIN ADC2_Init 1 */
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* USER CODE END ADC2_Init 1 */
 350:Src/main.c    **** 
 351:Src/main.c    ****   /** Common config
 352:Src/main.c    ****   */
 353:Src/main.c    ****   hadc2.Instance = ADC2;
 354:Src/main.c    ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 355:Src/main.c    ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 356:Src/main.c    ****   hadc2.Init.DataAlign = ADC_DATAALIGN_LEFT;
 357:Src/main.c    ****   hadc2.Init.GainCompensation = 0;
 358:Src/main.c    ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 359:Src/main.c    ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 360:Src/main.c    ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 361:Src/main.c    ****   hadc2.Init.ContinuousConvMode = DISABLE;
 362:Src/main.c    ****   hadc2.Init.NbrOfConversion = 1;
 363:Src/main.c    ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 364:Src/main.c    ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 365:Src/main.c    ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 366:Src/main.c    ****   hadc2.Init.OversamplingMode = DISABLE;
 367:Src/main.c    ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 368:Src/main.c    ****   {
 369:Src/main.c    ****     Error_Handler();
 370:Src/main.c    ****   }
 371:Src/main.c    **** 
 372:Src/main.c    ****   /** Configure Injected Channel
 373:Src/main.c    ****   */
 374:Src/main.c    ****   sConfigInjected.InjectedChannel = ADC_CHANNEL_VOPAMP3_ADC2;
 375:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 376:Src/main.c    ****   sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_6CYCLES_5;
 377:Src/main.c    ****   sConfigInjected.InjectedSingleDiff = ADC_SINGLE_ENDED;
 378:Src/main.c    ****   sConfigInjected.InjectedOffsetNumber = ADC_OFFSET_NONE;
 379:Src/main.c    ****   sConfigInjected.InjectedOffset = 0;
 380:Src/main.c    ****   sConfigInjected.InjectedNbrOfConversion = 2;
 381:Src/main.c    ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 382:Src/main.c    ****   sConfigInjected.AutoInjectedConv = DISABLE;
 383:Src/main.c    ****   sConfigInjected.QueueInjectedContext = DISABLE;
 384:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_CC4;
 385:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 386:Src/main.c    ****   sConfigInjected.InjecOversamplingMode = DISABLE;
 387:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc2, &sConfigInjected) != HAL_OK)
 388:Src/main.c    ****   {
 389:Src/main.c    ****     Error_Handler();
 390:Src/main.c    ****   }
ARM GAS  /tmp/cc4xqBG2.s 			page 10


 391:Src/main.c    **** 
 392:Src/main.c    ****   /** Configure Injected Channel
 393:Src/main.c    ****   */
 394:Src/main.c    ****   sConfigInjected.InjectedChannel = ADC_CHANNEL_3;
 395:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_2;
 396:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc2, &sConfigInjected) != HAL_OK)
 397:Src/main.c    ****   {
 398:Src/main.c    ****     Error_Handler();
 399:Src/main.c    ****   }
 400:Src/main.c    ****   /* USER CODE BEGIN ADC2_Init 2 */
 401:Src/main.c    **** 
 402:Src/main.c    ****   /* USER CODE END ADC2_Init 2 */
 403:Src/main.c    **** 
 404:Src/main.c    **** }
 405:Src/main.c    **** 
 406:Src/main.c    **** /**
 407:Src/main.c    ****   * @brief CORDIC Initialization Function
 408:Src/main.c    ****   * @param None
 409:Src/main.c    ****   * @retval None
 410:Src/main.c    ****   */
 411:Src/main.c    **** static void MX_CORDIC_Init(void)
 412:Src/main.c    **** {
 413:Src/main.c    **** 
 414:Src/main.c    ****   /* USER CODE BEGIN CORDIC_Init 0 */
 415:Src/main.c    **** 
 416:Src/main.c    ****   /* USER CODE END CORDIC_Init 0 */
 417:Src/main.c    **** 
 418:Src/main.c    ****   /* USER CODE BEGIN CORDIC_Init 1 */
 419:Src/main.c    **** 
 420:Src/main.c    ****   /* USER CODE END CORDIC_Init 1 */
 421:Src/main.c    ****   hcordic.Instance = CORDIC;
 422:Src/main.c    ****   if (HAL_CORDIC_Init(&hcordic) != HAL_OK)
 423:Src/main.c    ****   {
 424:Src/main.c    ****     Error_Handler();
 425:Src/main.c    ****   }
 426:Src/main.c    ****   /* USER CODE BEGIN CORDIC_Init 2 */
 427:Src/main.c    **** 
 428:Src/main.c    ****   /* USER CODE END CORDIC_Init 2 */
 429:Src/main.c    **** 
 430:Src/main.c    **** }
 431:Src/main.c    **** 
 432:Src/main.c    **** /**
 433:Src/main.c    ****   * @brief OPAMP1 Initialization Function
 434:Src/main.c    ****   * @param None
 435:Src/main.c    ****   * @retval None
 436:Src/main.c    ****   */
 437:Src/main.c    **** static void MX_OPAMP1_Init(void)
 438:Src/main.c    **** {
 439:Src/main.c    **** 
 440:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 0 */
 441:Src/main.c    **** 
 442:Src/main.c    ****   /* USER CODE END OPAMP1_Init 0 */
 443:Src/main.c    **** 
 444:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 1 */
 445:Src/main.c    **** 
 446:Src/main.c    ****   /* USER CODE END OPAMP1_Init 1 */
 447:Src/main.c    ****   hopamp1.Instance = OPAMP1;
ARM GAS  /tmp/cc4xqBG2.s 			page 11


 448:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 449:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 450:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 451:Src/main.c    ****   hopamp1.Init.InternalOutput = DISABLE;
 452:Src/main.c    ****   hopamp1.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 453:Src/main.c    ****   hopamp1.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 454:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_16_OR_MINUS_15;
 455:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 456:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 457:Src/main.c    ****   {
 458:Src/main.c    ****     Error_Handler();
 459:Src/main.c    ****   }
 460:Src/main.c    ****   /* USER CODE BEGIN OPAMP1_Init 2 */
 461:Src/main.c    **** 
 462:Src/main.c    ****   /* USER CODE END OPAMP1_Init 2 */
 463:Src/main.c    **** 
 464:Src/main.c    **** }
 465:Src/main.c    **** 
 466:Src/main.c    **** /**
 467:Src/main.c    ****   * @brief OPAMP2 Initialization Function
 468:Src/main.c    ****   * @param None
 469:Src/main.c    ****   * @retval None
 470:Src/main.c    ****   */
 471:Src/main.c    **** static void MX_OPAMP2_Init(void)
 472:Src/main.c    **** {
 473:Src/main.c    **** 
 474:Src/main.c    ****   /* USER CODE BEGIN OPAMP2_Init 0 */
 475:Src/main.c    **** 
 476:Src/main.c    ****   /* USER CODE END OPAMP2_Init 0 */
 477:Src/main.c    **** 
 478:Src/main.c    ****   /* USER CODE BEGIN OPAMP2_Init 1 */
 479:Src/main.c    **** 
 480:Src/main.c    ****   /* USER CODE END OPAMP2_Init 1 */
 481:Src/main.c    ****   hopamp2.Instance = OPAMP2;
 482:Src/main.c    ****   hopamp2.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 483:Src/main.c    ****   hopamp2.Init.Mode = OPAMP_PGA_MODE;
 484:Src/main.c    ****   hopamp2.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 485:Src/main.c    ****   hopamp2.Init.InternalOutput = DISABLE;
 486:Src/main.c    ****   hopamp2.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 487:Src/main.c    ****   hopamp2.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 488:Src/main.c    ****   hopamp2.Init.PgaGain = OPAMP_PGA_GAIN_16_OR_MINUS_15;
 489:Src/main.c    ****   hopamp2.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 490:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp2) != HAL_OK)
 491:Src/main.c    ****   {
 492:Src/main.c    ****     Error_Handler();
 493:Src/main.c    ****   }
 494:Src/main.c    ****   /* USER CODE BEGIN OPAMP2_Init 2 */
 495:Src/main.c    **** 
 496:Src/main.c    ****   /* USER CODE END OPAMP2_Init 2 */
 497:Src/main.c    **** 
 498:Src/main.c    **** }
 499:Src/main.c    **** 
 500:Src/main.c    **** /**
 501:Src/main.c    ****   * @brief OPAMP3 Initialization Function
 502:Src/main.c    ****   * @param None
 503:Src/main.c    ****   * @retval None
 504:Src/main.c    ****   */
ARM GAS  /tmp/cc4xqBG2.s 			page 12


 505:Src/main.c    **** static void MX_OPAMP3_Init(void)
 506:Src/main.c    **** {
 507:Src/main.c    **** 
 508:Src/main.c    ****   /* USER CODE BEGIN OPAMP3_Init 0 */
 509:Src/main.c    **** 
 510:Src/main.c    ****   /* USER CODE END OPAMP3_Init 0 */
 511:Src/main.c    **** 
 512:Src/main.c    ****   /* USER CODE BEGIN OPAMP3_Init 1 */
 513:Src/main.c    **** 
 514:Src/main.c    ****   /* USER CODE END OPAMP3_Init 1 */
 515:Src/main.c    ****   hopamp3.Instance = OPAMP3;
 516:Src/main.c    ****   hopamp3.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 517:Src/main.c    ****   hopamp3.Init.Mode = OPAMP_PGA_MODE;
 518:Src/main.c    ****   hopamp3.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 519:Src/main.c    ****   hopamp3.Init.InternalOutput = ENABLE;
 520:Src/main.c    ****   hopamp3.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 521:Src/main.c    ****   hopamp3.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 522:Src/main.c    ****   hopamp3.Init.PgaGain = OPAMP_PGA_GAIN_16_OR_MINUS_15;
 523:Src/main.c    ****   hopamp3.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 524:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp3) != HAL_OK)
 525:Src/main.c    ****   {
 526:Src/main.c    ****     Error_Handler();
 527:Src/main.c    ****   }
 528:Src/main.c    ****   /* USER CODE BEGIN OPAMP3_Init 2 */
 529:Src/main.c    **** 
 530:Src/main.c    ****   /* USER CODE END OPAMP3_Init 2 */
 531:Src/main.c    **** 
 532:Src/main.c    **** }
 533:Src/main.c    **** 
 534:Src/main.c    **** /**
 535:Src/main.c    ****   * @brief TIM1 Initialization Function
 536:Src/main.c    ****   * @param None
 537:Src/main.c    ****   * @retval None
 538:Src/main.c    ****   */
 539:Src/main.c    **** static void MX_TIM1_Init(void)
 540:Src/main.c    **** {
 541:Src/main.c    **** 
 542:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 0 */
 543:Src/main.c    **** 
 544:Src/main.c    ****   /* USER CODE END TIM1_Init 0 */
 545:Src/main.c    **** 
 546:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 547:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 548:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 549:Src/main.c    **** 
 550:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 1 */
 551:Src/main.c    **** 
 552:Src/main.c    ****   /* USER CODE END TIM1_Init 1 */
 553:Src/main.c    ****   htim1.Instance = TIM1;
 554:Src/main.c    ****   htim1.Init.Prescaler = ((TIM_CLOCK_DIVIDER) - 1);
 555:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
 556:Src/main.c    ****   htim1.Init.Period = ((PWM_PERIOD_CYCLES) / 2);
 557:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV2;
 558:Src/main.c    ****   htim1.Init.RepetitionCounter = (REP_COUNTER);
 559:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 560:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 561:Src/main.c    ****   {
ARM GAS  /tmp/cc4xqBG2.s 			page 13


 562:Src/main.c    ****     Error_Handler();
 563:Src/main.c    ****   }
 564:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_OC4REF;
 565:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 566:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 567:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 568:Src/main.c    ****   {
 569:Src/main.c    ****     Error_Handler();
 570:Src/main.c    ****   }
 571:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 572:Src/main.c    ****   sConfigOC.Pulse = ((PWM_PERIOD_CYCLES) / 4);
 573:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 574:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 575:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 576:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 577:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 578:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 579:Src/main.c    ****   {
 580:Src/main.c    ****     Error_Handler();
 581:Src/main.c    ****   }
 582:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 583:Src/main.c    ****   {
 584:Src/main.c    ****     Error_Handler();
 585:Src/main.c    ****   }
 586:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 587:Src/main.c    ****   {
 588:Src/main.c    ****     Error_Handler();
 589:Src/main.c    ****   }
 590:Src/main.c    ****   sConfigOC.OCMode = TIM_OCMODE_PWM2;
 591:Src/main.c    ****   sConfigOC.Pulse = (((PWM_PERIOD_CYCLES) / 2) - (HTMIN));
 592:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 593:Src/main.c    ****   {
 594:Src/main.c    ****     Error_Handler();
 595:Src/main.c    ****   }
 596:Src/main.c    ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_ENABLE;
 597:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 598:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 599:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = ((DEAD_TIME_COUNTS) / 2);
 600:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 601:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 602:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 603:Src/main.c    ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 604:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 605:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 606:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 3;
 607:Src/main.c    ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 608:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 609:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 610:Src/main.c    ****   {
 611:Src/main.c    ****     Error_Handler();
 612:Src/main.c    ****   }
 613:Src/main.c    ****   /* USER CODE BEGIN TIM1_Init 2 */
 614:Src/main.c    **** 
 615:Src/main.c    ****   /* USER CODE END TIM1_Init 2 */
 616:Src/main.c    ****   HAL_TIM_MspPostInit(&htim1);
 617:Src/main.c    **** 
 618:Src/main.c    **** }
ARM GAS  /tmp/cc4xqBG2.s 			page 14


 619:Src/main.c    **** 
 620:Src/main.c    **** /**
 621:Src/main.c    ****   * @brief TIM2 Initialization Function
 622:Src/main.c    ****   * @param None
 623:Src/main.c    ****   * @retval None
 624:Src/main.c    ****   */
 625:Src/main.c    **** static void MX_TIM2_Init(void)
 626:Src/main.c    **** {
 627:Src/main.c    **** 
 628:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 629:Src/main.c    **** 
 630:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 631:Src/main.c    **** 
 632:Src/main.c    ****   TIM_SlaveConfigTypeDef sSlaveConfig = {0};
 633:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 634:Src/main.c    ****   TIM_IC_InitTypeDef sConfigIC = {0};
 635:Src/main.c    **** 
 636:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 637:Src/main.c    **** 
 638:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 639:Src/main.c    ****   htim2.Instance = TIM2;
 640:Src/main.c    ****   htim2.Init.Prescaler = 0;
 641:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 642:Src/main.c    ****   htim2.Init.Period = 4294967295;
 643:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 644:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 645:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 646:Src/main.c    ****   {
 647:Src/main.c    ****     Error_Handler();
 648:Src/main.c    ****   }
 649:Src/main.c    ****   if (HAL_TIM_IC_Init(&htim2) != HAL_OK)
 650:Src/main.c    ****   {
 651:Src/main.c    ****     Error_Handler();
 652:Src/main.c    ****   }
 653:Src/main.c    ****   sSlaveConfig.SlaveMode = TIM_SLAVEMODE_RESET;
 654:Src/main.c    ****   sSlaveConfig.InputTrigger = TIM_TS_TI1FP1;
 655:Src/main.c    ****   sSlaveConfig.TriggerPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 656:Src/main.c    ****   sSlaveConfig.TriggerFilter = 0;
 657:Src/main.c    ****   if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 658:Src/main.c    ****   {
 659:Src/main.c    ****     Error_Handler();
 660:Src/main.c    ****   }
 661:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 662:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 663:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 664:Src/main.c    ****   {
 665:Src/main.c    ****     Error_Handler();
 666:Src/main.c    ****   }
 667:Src/main.c    ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 668:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 669:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 670:Src/main.c    ****   sConfigIC.ICFilter = 0;
 671:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 672:Src/main.c    ****   {
 673:Src/main.c    ****     Error_Handler();
 674:Src/main.c    ****   }
 675:Src/main.c    ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_FALLING;
ARM GAS  /tmp/cc4xqBG2.s 			page 15


 676:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 677:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 678:Src/main.c    ****   {
 679:Src/main.c    ****     Error_Handler();
 680:Src/main.c    ****   }
 681:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 682:Src/main.c    **** 
 683:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 684:Src/main.c    **** 
 685:Src/main.c    **** }
 686:Src/main.c    **** 
 687:Src/main.c    **** /**
 688:Src/main.c    ****   * @brief USART2 Initialization Function
 689:Src/main.c    ****   * @param None
 690:Src/main.c    ****   * @retval None
 691:Src/main.c    ****   */
 692:Src/main.c    **** static void MX_USART2_UART_Init(void)
 693:Src/main.c    **** {
 694:Src/main.c    **** 
 695:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 696:Src/main.c    **** 
 697:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 698:Src/main.c    **** 
 699:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 700:Src/main.c    **** 
 701:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 702:Src/main.c    ****   huart2.Instance = USART2;
 703:Src/main.c    ****   huart2.Init.BaudRate = 1843200;
 704:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 705:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 706:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 707:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 708:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 709:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 710:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 711:Src/main.c    ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 712:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 713:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 714:Src/main.c    ****   {
 715:Src/main.c    ****     Error_Handler();
 716:Src/main.c    ****   }
 717:Src/main.c    ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 718:Src/main.c    ****   {
 719:Src/main.c    ****     Error_Handler();
 720:Src/main.c    ****   }
 721:Src/main.c    ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 722:Src/main.c    ****   {
 723:Src/main.c    ****     Error_Handler();
 724:Src/main.c    ****   }
 725:Src/main.c    ****   if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 726:Src/main.c    ****   {
 727:Src/main.c    ****     Error_Handler();
 728:Src/main.c    ****   }
 729:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 730:Src/main.c    **** 
 731:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 732:Src/main.c    **** 
ARM GAS  /tmp/cc4xqBG2.s 			page 16


 733:Src/main.c    **** }
 734:Src/main.c    **** 
 735:Src/main.c    **** /**
 736:Src/main.c    ****   * Enable DMA controller clock
 737:Src/main.c    ****   */
 738:Src/main.c    **** static void MX_DMA_Init(void)
 739:Src/main.c    **** {
 740:Src/main.c    **** 
 741:Src/main.c    ****   /* DMA controller clock enable */
 742:Src/main.c    ****   __HAL_RCC_DMAMUX1_CLK_ENABLE();
 743:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 744:Src/main.c    **** 
 745:Src/main.c    **** }
 746:Src/main.c    **** 
 747:Src/main.c    **** /**
 748:Src/main.c    ****   * @brief GPIO Initialization Function
 749:Src/main.c    ****   * @param None
 750:Src/main.c    ****   * @retval None
 751:Src/main.c    ****   */
 752:Src/main.c    **** static void MX_GPIO_Init(void)
 753:Src/main.c    **** {
 754:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 755:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 756:Src/main.c    **** /* USER CODE END MX_GPIO_Init_1 */
 757:Src/main.c    **** 
 758:Src/main.c    ****   /* GPIO Ports Clock Enable */
 759:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 760:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 761:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 762:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 763:Src/main.c    **** 
 764:Src/main.c    ****   /*Configure GPIO pin : Start_Stop_Pin */
 765:Src/main.c    ****   GPIO_InitStruct.Pin = Start_Stop_Pin;
 766:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 767:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 768:Src/main.c    ****   HAL_GPIO_Init(Start_Stop_GPIO_Port, &GPIO_InitStruct);
 769:Src/main.c    **** 
 770:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 771:Src/main.c    **** /* USER CODE END MX_GPIO_Init_2 */
 772:Src/main.c    **** }
 773:Src/main.c    **** 
 774:Src/main.c    **** /* USER CODE BEGIN 4 */
 775:Src/main.c    **** 
 776:Src/main.c    **** /* USER CODE END 4 */
 777:Src/main.c    **** 
 778:Src/main.c    **** /**
 779:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 780:Src/main.c    ****   * @retval None
 781:Src/main.c    ****   */
 782:Src/main.c    **** void Error_Handler(void)
 109              		.loc 1 782 6 view .LVU35
 110              	.LBE141:
 783:Src/main.c    **** {
 784:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 785:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 786:Src/main.c    ****   __disable_irq();
 111              		.loc 1 786 3 view .LVU36
ARM GAS  /tmp/cc4xqBG2.s 			page 17


 112              	.LBB144:
 113              	.LBB142:
 114              	.LBI142:
 115              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
ARM GAS  /tmp/cc4xqBG2.s 			page 18


  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
ARM GAS  /tmp/cc4xqBG2.s 			page 19


 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/cc4xqBG2.s 			page 20


 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 116              		.loc 2 207 27 view .LVU37
 117              	.LBB143:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 118              		.loc 2 209 3 view .LVU38
 119              		.syntax unified
 120              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 121 0048 72B6     		cpsid i
 122              	@ 0 "" 2
 123              		.thumb
 124              		.syntax unified
 125              	.L3:
 126              	.LBE143:
 127              	.LBE142:
 128              	.LBE144:
 787:Src/main.c    ****   while (1)
 129              		.loc 1 787 3 view .LVU39
ARM GAS  /tmp/cc4xqBG2.s 			page 21


 788:Src/main.c    ****   {
 789:Src/main.c    ****   }
 130              		.loc 1 789 3 view .LVU40
 787:Src/main.c    ****   while (1)
 131              		.loc 1 787 3 view .LVU41
 132              		.loc 1 789 3 view .LVU42
 133 004a FEE7     		b	.L3
 134              	.L2:
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 135              		.loc 1 180 3 view .LVU43
 182:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 136              		.loc 1 182 3 view .LVU44
 183:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 137              		.loc 1 183 3 view .LVU45
 184:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 138              		.loc 1 184 3 view .LVU46
 139 004c 0346     		mov	r3, r0
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 140              		.loc 1 180 31 is_stmt 0 view .LVU47
 141 004e 0F24     		movs	r4, #15
 142 0050 0325     		movs	r5, #3
 185:Src/main.c    **** 
 143              		.loc 1 185 36 view .LVU48
 144 0052 0493     		str	r3, [sp, #16]
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 145              		.loc 1 180 31 view .LVU49
 146 0054 0022     		movs	r2, #0
 147 0056 0023     		movs	r3, #0
 187:Src/main.c    ****   {
 148              		.loc 1 187 7 view .LVU50
 149 0058 6846     		mov	r0, sp
 150 005a 0421     		movs	r1, #4
 180:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 151              		.loc 1 180 31 view .LVU51
 152 005c CDE90045 		strd	r4, [sp]
 153 0060 CDE90223 		strd	r2, [sp, #8]
 185:Src/main.c    **** 
 154              		.loc 1 185 3 is_stmt 1 view .LVU52
 187:Src/main.c    ****   {
 155              		.loc 1 187 3 view .LVU53
 187:Src/main.c    ****   {
 156              		.loc 1 187 7 is_stmt 0 view .LVU54
 157 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 158              	.LVL3:
 187:Src/main.c    ****   {
 159              		.loc 1 187 6 view .LVU55
 160 0068 08B1     		cbz	r0, .L4
 189:Src/main.c    ****   }
 161              		.loc 1 189 5 is_stmt 1 view .LVU56
 162              	.LBB145:
 163              	.LBI145:
 782:Src/main.c    **** {
 164              		.loc 1 782 6 view .LVU57
 165              	.LBE145:
 786:Src/main.c    ****   while (1)
 166              		.loc 1 786 3 view .LVU58
 167              	.LBB148:
ARM GAS  /tmp/cc4xqBG2.s 			page 22


 168              	.LBB146:
 169              	.LBI146:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 170              		.loc 2 207 27 view .LVU59
 171              	.LBB147:
 172              		.loc 2 209 3 view .LVU60
 173              		.syntax unified
 174              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 175 006a 72B6     		cpsid i
 176              	@ 0 "" 2
 177              		.thumb
 178              		.syntax unified
 179              	.L5:
 180              	.LBE147:
 181              	.LBE146:
 182              	.LBE148:
 787:Src/main.c    ****   {
 183              		.loc 1 787 3 view .LVU61
 184              		.loc 1 789 3 view .LVU62
 787:Src/main.c    ****   {
 185              		.loc 1 787 3 view .LVU63
 186              		.loc 1 789 3 view .LVU64
 187 006c FEE7     		b	.L5
 188              	.L4:
 194:Src/main.c    **** }
 189              		.loc 1 194 3 view .LVU65
 190 006e FFF7FEFF 		bl	HAL_RCC_EnableCSS
 191              	.LVL4:
 195:Src/main.c    **** 
 192              		.loc 1 195 1 is_stmt 0 view .LVU66
 193 0072 15B0     		add	sp, sp, #84
 194              	.LCFI2:
 195              		.cfi_def_cfa_offset 20
 196              		@ sp needed
 197 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 198              		.cfi_endproc
 199              	.LFE1467:
 201 0076 00BF     		.section	.text.startup.main,"ax",%progbits
 202              		.align	1
 203              		.p2align 2,,3
 204              		.global	main
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	main:
 211              	.LFB1466:
  95:Src/main.c    **** 
 212              		.loc 1 95 1 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ Volatile: function does not return.
 215              		@ args = 0, pretend = 0, frame = 136
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 104:Src/main.c    **** 
 217              		.loc 1 104 3 view .LVU68
  95:Src/main.c    **** 
 218              		.loc 1 95 1 is_stmt 0 view .LVU69
ARM GAS  /tmp/cc4xqBG2.s 			page 23


 219 0000 2DE98048 		push	{r7, fp, lr}
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 12
 222              		.cfi_offset 7, -12
 223              		.cfi_offset 11, -8
 224              		.cfi_offset 14, -4
 225              	.LBB268:
 226              	.LBB269:
 754:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 227              		.loc 1 754 20 view .LVU70
 228 0004 0025     		movs	r5, #0
 229              	.LBE269:
 230              	.LBE268:
  95:Src/main.c    **** 
 231              		.loc 1 95 1 view .LVU71
 232 0006 A3B0     		sub	sp, sp, #140
 233              	.LCFI4:
 234              		.cfi_def_cfa_offset 152
 104:Src/main.c    **** 
 235              		.loc 1 104 3 view .LVU72
 236 0008 FFF7FEFF 		bl	HAL_Init
 237              	.LVL5:
 111:Src/main.c    **** 
 238              		.loc 1 111 3 is_stmt 1 view .LVU73
 239 000c FFF7FEFF 		bl	SystemClock_Config
 240              	.LVL6:
 118:Src/main.c    ****   MX_DMA_Init();
 241              		.loc 1 118 3 view .LVU74
 242              	.LBB279:
 243              	.LBI268:
 752:Src/main.c    **** {
 244              		.loc 1 752 13 view .LVU75
 245              	.LBB277:
 754:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 246              		.loc 1 754 3 view .LVU76
 754:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 247              		.loc 1 754 20 is_stmt 0 view .LVU77
 248 0010 CDE91455 		strd	r5, r5, [sp, #80]
 249              	.LBB270:
 759:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 250              		.loc 1 759 3 view .LVU78
 251 0014 AE4E     		ldr	r6, .L71+16
 252              	.LBE270:
 754:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 253              		.loc 1 754 20 view .LVU79
 254 0016 1695     		str	r5, [sp, #88]
 759:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 255              		.loc 1 759 3 is_stmt 1 view .LVU80
 256              	.LBB271:
 759:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 257              		.loc 1 759 3 view .LVU81
 759:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 258              		.loc 1 759 3 view .LVU82
 259 0018 F36C     		ldr	r3, [r6, #76]
 260              	.LBE271:
 768:Src/main.c    **** 
 261              		.loc 1 768 3 is_stmt 0 view .LVU83
ARM GAS  /tmp/cc4xqBG2.s 			page 24


 262 001a AE48     		ldr	r0, .L71+20
 263              	.LBE277:
 264              	.LBE279:
 265              	.LBB280:
 266              	.LBB281:
 248:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 267              		.loc 1 248 18 view .LVU84
 268 001c AE4C     		ldr	r4, .L71+24
 269              	.LBE281:
 270              	.LBE280:
 271              	.LBB320:
 272              	.LBB278:
 273              	.LBB272:
 759:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 274              		.loc 1 759 3 view .LVU85
 275 001e 43F00403 		orr	r3, r3, #4
 276 0022 F364     		str	r3, [r6, #76]
 759:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 277              		.loc 1 759 3 is_stmt 1 view .LVU86
 278 0024 F36C     		ldr	r3, [r6, #76]
 279 0026 03F00403 		and	r3, r3, #4
 280 002a 0293     		str	r3, [sp, #8]
 759:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 281              		.loc 1 759 3 view .LVU87
 282 002c 029B     		ldr	r3, [sp, #8]
 283              	.LBE272:
 760:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 284              		.loc 1 760 3 view .LVU88
 285              	.LBB273:
 760:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 286              		.loc 1 760 3 view .LVU89
 760:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 287              		.loc 1 760 3 view .LVU90
 288 002e F36C     		ldr	r3, [r6, #76]
 289 0030 43F02003 		orr	r3, r3, #32
 290 0034 F364     		str	r3, [r6, #76]
 760:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 291              		.loc 1 760 3 view .LVU91
 292 0036 F36C     		ldr	r3, [r6, #76]
 293 0038 03F02003 		and	r3, r3, #32
 294 003c 0393     		str	r3, [sp, #12]
 760:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 295              		.loc 1 760 3 view .LVU92
 296 003e 039B     		ldr	r3, [sp, #12]
 297              	.LBE273:
 761:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 298              		.loc 1 761 3 view .LVU93
 299              	.LBB274:
 761:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 300              		.loc 1 761 3 view .LVU94
 761:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 301              		.loc 1 761 3 view .LVU95
 302 0040 F36C     		ldr	r3, [r6, #76]
 303 0042 43F00103 		orr	r3, r3, #1
 304 0046 F364     		str	r3, [r6, #76]
 761:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 305              		.loc 1 761 3 view .LVU96
ARM GAS  /tmp/cc4xqBG2.s 			page 25


 306 0048 F36C     		ldr	r3, [r6, #76]
 307 004a 03F00103 		and	r3, r3, #1
 308 004e 0493     		str	r3, [sp, #16]
 761:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 309              		.loc 1 761 3 view .LVU97
 310 0050 049B     		ldr	r3, [sp, #16]
 311              	.LBE274:
 762:Src/main.c    **** 
 312              		.loc 1 762 3 view .LVU98
 313              	.LBB275:
 762:Src/main.c    **** 
 314              		.loc 1 762 3 view .LVU99
 762:Src/main.c    **** 
 315              		.loc 1 762 3 view .LVU100
 316 0052 F36C     		ldr	r3, [r6, #76]
 317 0054 43F00203 		orr	r3, r3, #2
 318 0058 F364     		str	r3, [r6, #76]
 762:Src/main.c    **** 
 319              		.loc 1 762 3 view .LVU101
 320 005a F36C     		ldr	r3, [r6, #76]
 321 005c 03F00203 		and	r3, r3, #2
 322 0060 0593     		str	r3, [sp, #20]
 762:Src/main.c    **** 
 323              		.loc 1 762 3 view .LVU102
 324              	.LBE275:
 765:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 325              		.loc 1 765 23 is_stmt 0 view .LVU103
 326 0062 4FF48062 		mov	r2, #1024
 766:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 327              		.loc 1 766 24 view .LVU104
 328 0066 4FF40413 		mov	r3, #2162688
 768:Src/main.c    **** 
 329              		.loc 1 768 3 view .LVU105
 330 006a 12A9     		add	r1, sp, #72
 766:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 331              		.loc 1 766 24 view .LVU106
 332 006c CDE91223 		strd	r2, r3, [sp, #72]
 333              	.LBB276:
 762:Src/main.c    **** 
 334              		.loc 1 762 3 view .LVU107
 335 0070 059F     		ldr	r7, [sp, #20]
 336              	.LBE276:
 765:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 337              		.loc 1 765 3 is_stmt 1 view .LVU108
 767:Src/main.c    ****   HAL_GPIO_Init(Start_Stop_GPIO_Port, &GPIO_InitStruct);
 338              		.loc 1 767 3 view .LVU109
 768:Src/main.c    **** 
 339              		.loc 1 768 3 view .LVU110
 340 0072 FFF7FEFF 		bl	HAL_GPIO_Init
 341              	.LVL7:
 342              	.LBE278:
 343              	.LBE320:
 119:Src/main.c    ****   MX_ADC1_Init();
 344              		.loc 1 119 3 view .LVU111
 345              	.LBB321:
 346              	.LBI321:
 738:Src/main.c    **** {
ARM GAS  /tmp/cc4xqBG2.s 			page 26


 347              		.loc 1 738 13 view .LVU112
 348              	.LBE321:
 742:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 349              		.loc 1 742 3 view .LVU113
 350              	.LBB326:
 351              	.LBB322:
 742:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 352              		.loc 1 742 3 view .LVU114
 742:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 353              		.loc 1 742 3 view .LVU115
 354 0076 B36C     		ldr	r3, [r6, #72]
 355 0078 43F00403 		orr	r3, r3, #4
 356 007c B364     		str	r3, [r6, #72]
 742:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 357              		.loc 1 742 3 view .LVU116
 358 007e B36C     		ldr	r3, [r6, #72]
 359 0080 03F00403 		and	r3, r3, #4
 360 0084 0093     		str	r3, [sp]
 742:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 361              		.loc 1 742 3 view .LVU117
 362 0086 009B     		ldr	r3, [sp]
 363              	.LBE322:
 364              	.LBE326:
 743:Src/main.c    **** 
 365              		.loc 1 743 3 view .LVU118
 366              	.LBB327:
 367              	.LBB323:
 743:Src/main.c    **** 
 368              		.loc 1 743 3 view .LVU119
 743:Src/main.c    **** 
 369              		.loc 1 743 3 view .LVU120
 370 0088 B36C     		ldr	r3, [r6, #72]
 371 008a 43F00103 		orr	r3, r3, #1
 372 008e B364     		str	r3, [r6, #72]
 743:Src/main.c    **** 
 373              		.loc 1 743 3 view .LVU121
 374 0090 B36C     		ldr	r3, [r6, #72]
 375              	.LBE323:
 376              	.LBE327:
 377              	.LBB328:
 378              	.LBB306:
 238:Src/main.c    ****   ADC_InjectionConfTypeDef sConfigInjected = {0};
 379              		.loc 1 238 24 is_stmt 0 view .LVU122
 380 0092 0695     		str	r5, [sp, #24]
 381              	.LBE306:
 382              	.LBE328:
 383              	.LBB329:
 384              	.LBB324:
 743:Src/main.c    **** 
 385              		.loc 1 743 3 view .LVU123
 386 0094 03F00103 		and	r3, r3, #1
 387 0098 0193     		str	r3, [sp, #4]
 743:Src/main.c    **** 
 388              		.loc 1 743 3 is_stmt 1 view .LVU124
 389              	.LBE324:
 390              	.LBE329:
 391              	.LBB330:
ARM GAS  /tmp/cc4xqBG2.s 			page 27


 392              	.LBB307:
 239:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 393              		.loc 1 239 28 is_stmt 0 view .LVU125
 394 009a 2946     		mov	r1, r5
 395 009c 3C22     		movs	r2, #60
 396 009e 12A8     		add	r0, sp, #72
 397              	.LBE307:
 398              	.LBE330:
 399              	.LBB331:
 400              	.LBB325:
 743:Src/main.c    **** 
 401              		.loc 1 743 3 view .LVU126
 402 00a0 019B     		ldr	r3, [sp, #4]
 403              	.LBE325:
 404              	.LBE331:
 120:Src/main.c    ****   MX_ADC2_Init();
 405              		.loc 1 120 3 is_stmt 1 view .LVU127
 406              	.LBB332:
 407              	.LBI280:
 231:Src/main.c    **** {
 408              		.loc 1 231 13 view .LVU128
 409              	.LBB308:
 238:Src/main.c    ****   ADC_InjectionConfTypeDef sConfigInjected = {0};
 410              		.loc 1 238 3 view .LVU129
 238:Src/main.c    ****   ADC_InjectionConfTypeDef sConfigInjected = {0};
 411              		.loc 1 238 24 is_stmt 0 view .LVU130
 412 00a2 CDE90755 		strd	r5, r5, [sp, #28]
 239:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 413              		.loc 1 239 3 is_stmt 1 view .LVU131
 239:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 414              		.loc 1 239 28 is_stmt 0 view .LVU132
 415 00a6 FFF7FEFF 		bl	memset
 416              	.LVL8:
 240:Src/main.c    **** 
 417              		.loc 1 240 3 is_stmt 1 view .LVU133
 240:Src/main.c    **** 
 418              		.loc 1 240 26 is_stmt 0 view .LVU134
 419 00aa 2946     		mov	r1, r5
 420 00ac 0AA8     		add	r0, sp, #40
 421 00ae 2022     		movs	r2, #32
 422 00b0 FFF7FEFF 		bl	memset
 423              	.LVL9:
 248:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 424              		.loc 1 248 3 is_stmt 1 view .LVU135
 249:Src/main.c    ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 425              		.loc 1 249 3 view .LVU136
 250:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_LEFT;
 426              		.loc 1 250 3 view .LVU137
 251:Src/main.c    ****   hadc1.Init.GainCompensation = 0;
 427              		.loc 1 251 3 view .LVU138
 252:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 428              		.loc 1 252 3 view .LVU139
 253:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 429              		.loc 1 253 3 view .LVU140
 254:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 430              		.loc 1 254 3 view .LVU141
 255:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
ARM GAS  /tmp/cc4xqBG2.s 			page 28


 431              		.loc 1 255 3 view .LVU142
 256:Src/main.c    ****   hadc1.Init.NbrOfConversion = 2;
 432              		.loc 1 256 3 view .LVU143
 251:Src/main.c    ****   hadc1.Init.GainCompensation = 0;
 433              		.loc 1 251 24 is_stmt 0 view .LVU144
 434 00b4 4FF4004B 		mov	fp, #32768
 248:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 435              		.loc 1 248 18 view .LVU145
 436 00b8 4FF0A043 		mov	r3, #1342177280
 253:Src/main.c    ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 437              		.loc 1 253 27 view .LVU146
 438 00bc 0127     		movs	r7, #1
 254:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 439              		.loc 1 254 27 view .LVU147
 440 00be 4FF0040A 		mov	r10, #4
 257:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 441              		.loc 1 257 30 view .LVU148
 442 00c2 0226     		movs	r6, #2
 264:Src/main.c    ****   {
 443              		.loc 1 264 7 view .LVU149
 444 00c4 2046     		mov	r0, r4
 255:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 445              		.loc 1 255 31 view .LVU150
 446 00c6 A583     		strh	r5, [r4, #28]	@ movhi
 257:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 447              		.loc 1 257 3 is_stmt 1 view .LVU151
 250:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_LEFT;
 448              		.loc 1 250 25 is_stmt 0 view .LVU152
 449 00c8 C4E90155 		strd	r5, r5, [r4, #4]
 252:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
 450              		.loc 1 252 31 view .LVU153
 451 00cc 2561     		str	r5, [r4, #16]
 258:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 452              		.loc 1 258 36 view .LVU154
 453 00ce 84F82450 		strb	r5, [r4, #36]
 260:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 454              		.loc 1 260 35 view .LVU155
 455 00d2 C4E90B55 		strd	r5, r5, [r4, #44]
 261:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 456              		.loc 1 261 36 view .LVU156
 457 00d6 84F83850 		strb	r5, [r4, #56]
 262:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 458              		.loc 1 262 22 view .LVU157
 459 00da E563     		str	r5, [r4, #60]
 263:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 460              		.loc 1 263 31 view .LVU158
 461 00dc 84F84050 		strb	r5, [r4, #64]
 248:Src/main.c    ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 462              		.loc 1 248 18 view .LVU159
 463 00e0 2360     		str	r3, [r4]
 251:Src/main.c    ****   hadc1.Init.GainCompensation = 0;
 464              		.loc 1 251 24 view .LVU160
 465 00e2 C4F80CB0 		str	fp, [r4, #12]
 254:Src/main.c    ****   hadc1.Init.LowPowerAutoWait = DISABLE;
 466              		.loc 1 254 27 view .LVU161
 467 00e6 C4E9057A 		strd	r7, r10, [r4, #20]
 257:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  /tmp/cc4xqBG2.s 			page 29


 468              		.loc 1 257 30 view .LVU162
 469 00ea 2662     		str	r6, [r4, #32]
 258:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 470              		.loc 1 258 3 is_stmt 1 view .LVU163
 259:Src/main.c    ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 471              		.loc 1 259 3 view .LVU164
 260:Src/main.c    ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 472              		.loc 1 260 3 view .LVU165
 261:Src/main.c    ****   hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 473              		.loc 1 261 3 view .LVU166
 262:Src/main.c    ****   hadc1.Init.OversamplingMode = DISABLE;
 474              		.loc 1 262 3 view .LVU167
 263:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 475              		.loc 1 263 3 view .LVU168
 264:Src/main.c    ****   {
 476              		.loc 1 264 3 view .LVU169
 264:Src/main.c    ****   {
 477              		.loc 1 264 7 is_stmt 0 view .LVU170
 478 00ec FFF7FEFF 		bl	HAL_ADC_Init
 479              	.LVL10:
 264:Src/main.c    ****   {
 480              		.loc 1 264 6 view .LVU171
 481 00f0 08B1     		cbz	r0, .L9
 266:Src/main.c    ****   }
 482              		.loc 1 266 5 is_stmt 1 view .LVU172
 483              	.LBB282:
 484              	.LBI282:
 782:Src/main.c    **** {
 485              		.loc 1 782 6 view .LVU173
 486              	.LBE282:
 487              	.LBE308:
 488              	.LBE332:
 786:Src/main.c    ****   while (1)
 489              		.loc 1 786 3 view .LVU174
 490              	.LBB333:
 491              	.LBB309:
 492              	.LBB285:
 493              	.LBB283:
 494              	.LBI283:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495              		.loc 2 207 27 view .LVU175
 496              	.LBB284:
 497              		.loc 2 209 3 view .LVU176
 498              		.syntax unified
 499              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 500 00f2 72B6     		cpsid i
 501              	@ 0 "" 2
 502              		.thumb
 503              		.syntax unified
 504              	.L10:
 505              	.LBE284:
 506              	.LBE283:
 507              	.LBE285:
 508              	.LBE309:
 509              	.LBE333:
 787:Src/main.c    ****   {
 510              		.loc 1 787 3 view .LVU177
ARM GAS  /tmp/cc4xqBG2.s 			page 30


 511              		.loc 1 789 3 view .LVU178
 787:Src/main.c    ****   {
 512              		.loc 1 787 3 view .LVU179
 513              		.loc 1 789 3 view .LVU180
 514 00f4 FEE7     		b	.L10
 515              	.L9:
 516              	.LBB334:
 517              	.LBB310:
 271:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 518              		.loc 1 271 3 view .LVU181
 519 00f6 0346     		mov	r3, r0
 272:Src/main.c    ****   {
 520              		.loc 1 272 7 is_stmt 0 view .LVU182
 521 00f8 06A9     		add	r1, sp, #24
 522 00fa 2046     		mov	r0, r4
 271:Src/main.c    ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 523              		.loc 1 271 18 view .LVU183
 524 00fc 0693     		str	r3, [sp, #24]
 272:Src/main.c    ****   {
 525              		.loc 1 272 3 is_stmt 1 view .LVU184
 272:Src/main.c    ****   {
 526              		.loc 1 272 7 is_stmt 0 view .LVU185
 527 00fe FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 528              	.LVL11:
 272:Src/main.c    ****   {
 529              		.loc 1 272 6 view .LVU186
 530 0102 0546     		mov	r5, r0
 531 0104 08B1     		cbz	r0, .L11
 274:Src/main.c    ****   }
 532              		.loc 1 274 5 is_stmt 1 view .LVU187
 533              	.LBB286:
 534              	.LBI286:
 782:Src/main.c    **** {
 535              		.loc 1 782 6 view .LVU188
 536              	.LBE286:
 537              	.LBE310:
 538              	.LBE334:
 786:Src/main.c    ****   while (1)
 539              		.loc 1 786 3 view .LVU189
 540              	.LBB335:
 541              	.LBB311:
 542              	.LBB289:
 543              	.LBB287:
 544              	.LBI287:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545              		.loc 2 207 27 view .LVU190
 546              	.LBB288:
 547              		.loc 2 209 3 view .LVU191
 548              		.syntax unified
 549              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 550 0106 72B6     		cpsid i
 551              	@ 0 "" 2
 552              		.thumb
 553              		.syntax unified
 554              	.L12:
 555              	.LBE288:
 556              	.LBE287:
ARM GAS  /tmp/cc4xqBG2.s 			page 31


 557              	.LBE289:
 558              	.LBE311:
 559              	.LBE335:
 787:Src/main.c    ****   {
 560              		.loc 1 787 3 view .LVU192
 561              		.loc 1 789 3 view .LVU193
 787:Src/main.c    ****   {
 562              		.loc 1 787 3 view .LVU194
 563              		.loc 1 789 3 view .LVU195
 564 0108 FEE7     		b	.L12
 565              	.L11:
 566              	.LBB336:
 567              	.LBB312:
 279:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 568              		.loc 1 279 3 view .LVU196
 280:Src/main.c    ****   sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_6CYCLES_5;
 569              		.loc 1 280 3 view .LVU197
 281:Src/main.c    ****   sConfigInjected.InjectedSingleDiff = ADC_SINGLE_ENDED;
 570              		.loc 1 281 3 view .LVU198
 282:Src/main.c    ****   sConfigInjected.InjectedOffsetNumber = ADC_OFFSET_NONE;
 571              		.loc 1 282 3 view .LVU199
 283:Src/main.c    ****   sConfigInjected.InjectedOffset = 0;
 572              		.loc 1 283 3 view .LVU200
 284:Src/main.c    ****   sConfigInjected.InjectedNbrOfConversion = 2;
 573              		.loc 1 284 3 view .LVU201
 279:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 574              		.loc 1 279 35 is_stmt 0 view .LVU202
 575 010a 744A     		ldr	r2, .L71+28
 285:Src/main.c    ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 576              		.loc 1 285 43 view .LVU203
 577 010c 1A96     		str	r6, [sp, #104]
 279:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 578              		.loc 1 279 35 view .LVU204
 579 010e 0923     		movs	r3, #9
 580 0110 CDE91223 		strd	r2, [sp, #72]
 581 0114 0122     		movs	r2, #1
 582 0116 7F23     		movs	r3, #127
 583 0118 CDE91423 		strd	r2, [sp, #80]
 584 011c 4FF00408 		mov	r8, #4
 585 0120 4FF00009 		mov	r9, #0
 289:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 586              		.loc 1 289 41 view .LVU205
 587 0124 8422     		movs	r2, #132
 588 0126 8023     		movs	r3, #128
 292:Src/main.c    ****   {
 589              		.loc 1 292 7 view .LVU206
 590 0128 12A9     		add	r1, sp, #72
 591 012a 2046     		mov	r0, r4
 286:Src/main.c    ****   sConfigInjected.AutoInjectedConv = DISABLE;
 592              		.loc 1 286 49 view .LVU207
 593 012c ADF86C50 		strh	r5, [sp, #108]	@ movhi
 288:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_CC4;
 594              		.loc 1 288 40 view .LVU208
 595 0130 8DF86E50 		strb	r5, [sp, #110]
 291:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 596              		.loc 1 291 41 view .LVU209
 597 0134 8DF87850 		strb	r5, [sp, #120]
ARM GAS  /tmp/cc4xqBG2.s 			page 32


 279:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 598              		.loc 1 279 35 view .LVU210
 599 0138 CDE91689 		strd	r8, [sp, #88]
 285:Src/main.c    ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 600              		.loc 1 285 3 is_stmt 1 view .LVU211
 286:Src/main.c    ****   sConfigInjected.AutoInjectedConv = DISABLE;
 601              		.loc 1 286 3 view .LVU212
 287:Src/main.c    ****   sConfigInjected.QueueInjectedContext = DISABLE;
 602              		.loc 1 287 3 view .LVU213
 288:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_CC4;
 603              		.loc 1 288 3 view .LVU214
 289:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 604              		.loc 1 289 3 view .LVU215
 290:Src/main.c    ****   sConfigInjected.InjecOversamplingMode = DISABLE;
 605              		.loc 1 290 3 view .LVU216
 289:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 606              		.loc 1 289 41 is_stmt 0 view .LVU217
 607 013c CDE91C23 		strd	r2, [sp, #112]
 291:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 608              		.loc 1 291 3 is_stmt 1 view .LVU218
 292:Src/main.c    ****   {
 609              		.loc 1 292 3 view .LVU219
 292:Src/main.c    ****   {
 610              		.loc 1 292 7 is_stmt 0 view .LVU220
 611 0140 FFF7FEFF 		bl	HAL_ADCEx_InjectedConfigChannel
 612              	.LVL12:
 292:Src/main.c    ****   {
 613              		.loc 1 292 6 view .LVU221
 614 0144 08B1     		cbz	r0, .L13
 294:Src/main.c    ****   }
 615              		.loc 1 294 5 is_stmt 1 view .LVU222
 616              	.LBB290:
 617              	.LBI290:
 782:Src/main.c    **** {
 618              		.loc 1 782 6 view .LVU223
 619              	.LBE290:
 620              	.LBE312:
 621              	.LBE336:
 786:Src/main.c    ****   while (1)
 622              		.loc 1 786 3 view .LVU224
 623              	.LBB337:
 624              	.LBB313:
 625              	.LBB293:
 626              	.LBB291:
 627              	.LBI291:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 628              		.loc 2 207 27 view .LVU225
 629              	.LBB292:
 630              		.loc 2 209 3 view .LVU226
 631              		.syntax unified
 632              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 633 0146 72B6     		cpsid i
 634              	@ 0 "" 2
 635              		.thumb
 636              		.syntax unified
 637              	.L14:
 638              	.LBE292:
ARM GAS  /tmp/cc4xqBG2.s 			page 33


 639              	.LBE291:
 640              	.LBE293:
 641              	.LBE313:
 642              	.LBE337:
 787:Src/main.c    ****   {
 643              		.loc 1 787 3 view .LVU227
 644              		.loc 1 789 3 view .LVU228
 787:Src/main.c    ****   {
 645              		.loc 1 787 3 view .LVU229
 646              		.loc 1 789 3 view .LVU230
 647 0148 FEE7     		b	.L14
 648              	.L13:
 649              	.LBB338:
 650              	.LBB314:
 299:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_2;
 651              		.loc 1 299 3 view .LVU231
 300:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc1, &sConfigInjected) != HAL_OK)
 652              		.loc 1 300 3 view .LVU232
 299:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_2;
 653              		.loc 1 299 35 is_stmt 0 view .LVU233
 654 014a 5DA3     		adr	r3, .L71
 655 014c D3E90023 		ldrd	r2, [r3]
 301:Src/main.c    ****   {
 656              		.loc 1 301 7 view .LVU234
 657 0150 12A9     		add	r1, sp, #72
 658 0152 2046     		mov	r0, r4
 299:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_2;
 659              		.loc 1 299 35 view .LVU235
 660 0154 CDE91223 		strd	r2, [sp, #72]
 301:Src/main.c    ****   {
 661              		.loc 1 301 3 is_stmt 1 view .LVU236
 301:Src/main.c    ****   {
 662              		.loc 1 301 7 is_stmt 0 view .LVU237
 663 0158 FFF7FEFF 		bl	HAL_ADCEx_InjectedConfigChannel
 664              	.LVL13:
 301:Src/main.c    ****   {
 665              		.loc 1 301 6 view .LVU238
 666 015c 08B1     		cbz	r0, .L15
 303:Src/main.c    ****   }
 667              		.loc 1 303 5 is_stmt 1 view .LVU239
 668              	.LBB294:
 669              	.LBI294:
 782:Src/main.c    **** {
 670              		.loc 1 782 6 view .LVU240
 671              	.LBE294:
 672              	.LBE314:
 673              	.LBE338:
 786:Src/main.c    ****   while (1)
 674              		.loc 1 786 3 view .LVU241
 675              	.LBB339:
 676              	.LBB315:
 677              	.LBB297:
 678              	.LBB295:
 679              	.LBI295:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 680              		.loc 2 207 27 view .LVU242
 681              	.LBB296:
ARM GAS  /tmp/cc4xqBG2.s 			page 34


 682              		.loc 2 209 3 view .LVU243
 683              		.syntax unified
 684              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 685 015e 72B6     		cpsid i
 686              	@ 0 "" 2
 687              		.thumb
 688              		.syntax unified
 689              	.L16:
 690              	.LBE296:
 691              	.LBE295:
 692              	.LBE297:
 693              	.LBE315:
 694              	.LBE339:
 787:Src/main.c    ****   {
 695              		.loc 1 787 3 view .LVU244
 696              		.loc 1 789 3 view .LVU245
 787:Src/main.c    ****   {
 697              		.loc 1 787 3 view .LVU246
 698              		.loc 1 789 3 view .LVU247
 699 0160 FEE7     		b	.L16
 700              	.L15:
 701              	.LBB340:
 702              	.LBB316:
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 703              		.loc 1 308 3 view .LVU248
 309:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_47CYCLES_5;
 704              		.loc 1 309 3 view .LVU249
 310:Src/main.c    ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 705              		.loc 1 310 3 view .LVU250
 311:Src/main.c    ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 706              		.loc 1 311 3 view .LVU251
 312:Src/main.c    ****   sConfig.Offset = 0;
 707              		.loc 1 312 3 view .LVU252
 313:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 708              		.loc 1 313 3 view .LVU253
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 709              		.loc 1 308 19 is_stmt 0 view .LVU254
 710 0162 5F4A     		ldr	r2, .L71+32
 711 0164 0623     		movs	r3, #6
 712 0166 CDE90A23 		strd	r2, [sp, #40]
 314:Src/main.c    ****   {
 713              		.loc 1 314 7 view .LVU255
 714 016a 0AA9     		add	r1, sp, #40
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 715              		.loc 1 308 19 view .LVU256
 716 016c 0422     		movs	r2, #4
 717 016e 7F23     		movs	r3, #127
 314:Src/main.c    ****   {
 718              		.loc 1 314 7 view .LVU257
 719 0170 2046     		mov	r0, r4
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 720              		.loc 1 308 19 view .LVU258
 721 0172 CDE90E89 		strd	r8, [sp, #56]
 314:Src/main.c    ****   {
 722              		.loc 1 314 3 is_stmt 1 view .LVU259
 308:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 723              		.loc 1 308 19 is_stmt 0 view .LVU260
ARM GAS  /tmp/cc4xqBG2.s 			page 35


 724 0176 CDE90C23 		strd	r2, [sp, #48]
 314:Src/main.c    ****   {
 725              		.loc 1 314 7 view .LVU261
 726 017a FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 727              	.LVL14:
 314:Src/main.c    ****   {
 728              		.loc 1 314 6 view .LVU262
 729 017e 08B1     		cbz	r0, .L17
 316:Src/main.c    ****   }
 730              		.loc 1 316 5 is_stmt 1 view .LVU263
 731              	.LBB298:
 732              	.LBI298:
 782:Src/main.c    **** {
 733              		.loc 1 782 6 view .LVU264
 734              	.LBE298:
 735              	.LBE316:
 736              	.LBE340:
 786:Src/main.c    ****   while (1)
 737              		.loc 1 786 3 view .LVU265
 738              	.LBB341:
 739              	.LBB317:
 740              	.LBB301:
 741              	.LBB299:
 742              	.LBI299:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 743              		.loc 2 207 27 view .LVU266
 744              	.LBB300:
 745              		.loc 2 209 3 view .LVU267
 746              		.syntax unified
 747              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 748 0180 72B6     		cpsid i
 749              	@ 0 "" 2
 750              		.thumb
 751              		.syntax unified
 752              	.L18:
 753              	.LBE300:
 754              	.LBE299:
 755              	.LBE301:
 756              	.LBE317:
 757              	.LBE341:
 787:Src/main.c    ****   {
 758              		.loc 1 787 3 view .LVU268
 759              		.loc 1 789 3 view .LVU269
 787:Src/main.c    ****   {
 760              		.loc 1 787 3 view .LVU270
 761              		.loc 1 789 3 view .LVU271
 762 0182 FEE7     		b	.L18
 763              	.L17:
 764              	.LBB342:
 765              	.LBB318:
 321:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 766              		.loc 1 321 3 view .LVU272
 322:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 767              		.loc 1 322 3 view .LVU273
 321:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 768              		.loc 1 321 19 is_stmt 0 view .LVU274
 769 0184 50A3     		adr	r3, .L71+8
ARM GAS  /tmp/cc4xqBG2.s 			page 36


 770 0186 D3E90023 		ldrd	r2, [r3]
 323:Src/main.c    ****   {
 771              		.loc 1 323 7 view .LVU275
 772 018a 2046     		mov	r0, r4
 773 018c 0AA9     		add	r1, sp, #40
 321:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 774              		.loc 1 321 19 view .LVU276
 775 018e CDE90A23 		strd	r2, [sp, #40]
 323:Src/main.c    ****   {
 776              		.loc 1 323 3 is_stmt 1 view .LVU277
 323:Src/main.c    ****   {
 777              		.loc 1 323 7 is_stmt 0 view .LVU278
 778 0192 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 779              	.LVL15:
 323:Src/main.c    ****   {
 780              		.loc 1 323 6 view .LVU279
 781 0196 0546     		mov	r5, r0
 782 0198 08B1     		cbz	r0, .L19
 325:Src/main.c    ****   }
 783              		.loc 1 325 5 is_stmt 1 view .LVU280
 784              	.LBB302:
 785              	.LBI302:
 782:Src/main.c    **** {
 786              		.loc 1 782 6 view .LVU281
 787              	.LBE302:
 788              	.LBE318:
 789              	.LBE342:
 786:Src/main.c    ****   while (1)
 790              		.loc 1 786 3 view .LVU282
 791              	.LBB343:
 792              	.LBB319:
 793              	.LBB305:
 794              	.LBB303:
 795              	.LBI303:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 796              		.loc 2 207 27 view .LVU283
 797              	.LBB304:
 798              		.loc 2 209 3 view .LVU284
 799              		.syntax unified
 800              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 801 019a 72B6     		cpsid i
 802              	@ 0 "" 2
 803              		.thumb
 804              		.syntax unified
 805              	.L20:
 806              	.LBE304:
 807              	.LBE303:
 808              	.LBE305:
 809              	.LBE319:
 810              	.LBE343:
 787:Src/main.c    ****   {
 811              		.loc 1 787 3 view .LVU285
 812              		.loc 1 789 3 view .LVU286
 787:Src/main.c    ****   {
 813              		.loc 1 787 3 view .LVU287
 814              		.loc 1 789 3 view .LVU288
 815 019c FEE7     		b	.L20
ARM GAS  /tmp/cc4xqBG2.s 			page 37


 816              	.L19:
 121:Src/main.c    ****   MX_CORDIC_Init();
 817              		.loc 1 121 3 view .LVU289
 818              	.LBB344:
 819              	.LBI344:
 338:Src/main.c    **** {
 820              		.loc 1 338 13 view .LVU290
 821              	.LBB345:
 345:Src/main.c    **** 
 822              		.loc 1 345 3 view .LVU291
 353:Src/main.c    ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 823              		.loc 1 353 18 is_stmt 0 view .LVU292
 824 019e 514C     		ldr	r4, .L71+36
 345:Src/main.c    **** 
 825              		.loc 1 345 28 view .LVU293
 826 01a0 0146     		mov	r1, r0
 827 01a2 3C22     		movs	r2, #60
 828 01a4 12A8     		add	r0, sp, #72
 829 01a6 FFF7FEFF 		bl	memset
 830              	.LVL16:
 353:Src/main.c    ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 831              		.loc 1 353 3 is_stmt 1 view .LVU294
 354:Src/main.c    ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 832              		.loc 1 354 3 view .LVU295
 355:Src/main.c    ****   hadc2.Init.DataAlign = ADC_DATAALIGN_LEFT;
 833              		.loc 1 355 3 view .LVU296
 356:Src/main.c    ****   hadc2.Init.GainCompensation = 0;
 834              		.loc 1 356 3 view .LVU297
 357:Src/main.c    ****   hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 835              		.loc 1 357 3 view .LVU298
 358:Src/main.c    ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 836              		.loc 1 358 3 view .LVU299
 359:Src/main.c    ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 837              		.loc 1 359 3 view .LVU300
 360:Src/main.c    ****   hadc2.Init.ContinuousConvMode = DISABLE;
 838              		.loc 1 360 3 view .LVU301
 361:Src/main.c    ****   hadc2.Init.NbrOfConversion = 1;
 839              		.loc 1 361 3 view .LVU302
 353:Src/main.c    ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 840              		.loc 1 353 18 is_stmt 0 view .LVU303
 841 01aa 4F4B     		ldr	r3, .L71+40
 360:Src/main.c    ****   hadc2.Init.ContinuousConvMode = DISABLE;
 842              		.loc 1 360 31 view .LVU304
 843 01ac A583     		strh	r5, [r4, #28]	@ movhi
 362:Src/main.c    ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 844              		.loc 1 362 3 is_stmt 1 view .LVU305
 367:Src/main.c    ****   {
 845              		.loc 1 367 7 is_stmt 0 view .LVU306
 846 01ae 2046     		mov	r0, r4
 353:Src/main.c    ****   hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 847              		.loc 1 353 18 view .LVU307
 848 01b0 2360     		str	r3, [r4]
 354:Src/main.c    ****   hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 849              		.loc 1 354 29 view .LVU308
 850 01b2 6560     		str	r5, [r4, #4]
 356:Src/main.c    ****   hadc2.Init.GainCompensation = 0;
 851              		.loc 1 356 24 view .LVU309
ARM GAS  /tmp/cc4xqBG2.s 			page 38


 852 01b4 C4E9025B 		strd	r5, fp, [r4, #8]
 358:Src/main.c    ****   hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 853              		.loc 1 358 27 view .LVU310
 854 01b8 C4E90457 		strd	r5, r7, [r4, #16]
 359:Src/main.c    ****   hadc2.Init.LowPowerAutoWait = DISABLE;
 855              		.loc 1 359 27 view .LVU311
 856 01bc C4F818A0 		str	r10, [r4, #24]
 362:Src/main.c    ****   hadc2.Init.DiscontinuousConvMode = DISABLE;
 857              		.loc 1 362 30 view .LVU312
 858 01c0 2762     		str	r7, [r4, #32]
 363:Src/main.c    ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 859              		.loc 1 363 3 is_stmt 1 view .LVU313
 363:Src/main.c    ****   hadc2.Init.DMAContinuousRequests = DISABLE;
 860              		.loc 1 363 36 is_stmt 0 view .LVU314
 861 01c2 84F82450 		strb	r5, [r4, #36]
 364:Src/main.c    ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 862              		.loc 1 364 3 is_stmt 1 view .LVU315
 364:Src/main.c    ****   hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 863              		.loc 1 364 36 is_stmt 0 view .LVU316
 864 01c6 84F83850 		strb	r5, [r4, #56]
 365:Src/main.c    ****   hadc2.Init.OversamplingMode = DISABLE;
 865              		.loc 1 365 3 is_stmt 1 view .LVU317
 365:Src/main.c    ****   hadc2.Init.OversamplingMode = DISABLE;
 866              		.loc 1 365 22 is_stmt 0 view .LVU318
 867 01ca E563     		str	r5, [r4, #60]
 366:Src/main.c    ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 868              		.loc 1 366 3 is_stmt 1 view .LVU319
 366:Src/main.c    ****   if (HAL_ADC_Init(&hadc2) != HAL_OK)
 869              		.loc 1 366 31 is_stmt 0 view .LVU320
 870 01cc 84F84050 		strb	r5, [r4, #64]
 367:Src/main.c    ****   {
 871              		.loc 1 367 3 is_stmt 1 view .LVU321
 367:Src/main.c    ****   {
 872              		.loc 1 367 7 is_stmt 0 view .LVU322
 873 01d0 FFF7FEFF 		bl	HAL_ADC_Init
 874              	.LVL17:
 367:Src/main.c    ****   {
 875              		.loc 1 367 6 view .LVU323
 876 01d4 0346     		mov	r3, r0
 877 01d6 08B1     		cbz	r0, .L21
 369:Src/main.c    ****   }
 878              		.loc 1 369 5 is_stmt 1 view .LVU324
 879              	.LBB346:
 880              	.LBI346:
 782:Src/main.c    **** {
 881              		.loc 1 782 6 view .LVU325
 882              	.LBE346:
 883              	.LBE345:
 884              	.LBE344:
 786:Src/main.c    ****   while (1)
 885              		.loc 1 786 3 view .LVU326
 886              	.LBB363:
 887              	.LBB358:
 888              	.LBB349:
 889              	.LBB347:
 890              	.LBI347:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc4xqBG2.s 			page 39


 891              		.loc 2 207 27 view .LVU327
 892              	.LBB348:
 893              		.loc 2 209 3 view .LVU328
 894              		.syntax unified
 895              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 896 01d8 72B6     		cpsid i
 897              	@ 0 "" 2
 898              		.thumb
 899              		.syntax unified
 900              	.L22:
 901              	.LBE348:
 902              	.LBE347:
 903              	.LBE349:
 904              	.LBE358:
 905              	.LBE363:
 787:Src/main.c    ****   {
 906              		.loc 1 787 3 view .LVU329
 907              		.loc 1 789 3 view .LVU330
 787:Src/main.c    ****   {
 908              		.loc 1 787 3 view .LVU331
 909              		.loc 1 789 3 view .LVU332
 910 01da FEE7     		b	.L22
 911              	.L21:
 912              	.LBB364:
 913              	.LBB359:
 374:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 914              		.loc 1 374 3 view .LVU333
 375:Src/main.c    ****   sConfigInjected.InjectedSamplingTime = ADC_SAMPLETIME_6CYCLES_5;
 915              		.loc 1 375 3 view .LVU334
 376:Src/main.c    ****   sConfigInjected.InjectedSingleDiff = ADC_SINGLE_ENDED;
 916              		.loc 1 376 3 view .LVU335
 377:Src/main.c    ****   sConfigInjected.InjectedOffsetNumber = ADC_OFFSET_NONE;
 917              		.loc 1 377 3 view .LVU336
 378:Src/main.c    ****   sConfigInjected.InjectedOffset = 0;
 918              		.loc 1 378 3 view .LVU337
 379:Src/main.c    ****   sConfigInjected.InjectedNbrOfConversion = 2;
 919              		.loc 1 379 3 view .LVU338
 374:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 920              		.loc 1 374 35 is_stmt 0 view .LVU339
 921 01dc CDE91689 		strd	r8, [sp, #88]
 380:Src/main.c    ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 922              		.loc 1 380 3 is_stmt 1 view .LVU340
 381:Src/main.c    ****   sConfigInjected.AutoInjectedConv = DISABLE;
 923              		.loc 1 381 3 view .LVU341
 382:Src/main.c    ****   sConfigInjected.QueueInjectedContext = DISABLE;
 924              		.loc 1 382 3 view .LVU342
 383:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_CC4;
 925              		.loc 1 383 3 view .LVU343
 374:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 926              		.loc 1 374 35 is_stmt 0 view .LVU344
 927 01e0 DFF82881 		ldr	r8, .L71+76
 380:Src/main.c    ****   sConfigInjected.InjectedDiscontinuousConvMode = DISABLE;
 928              		.loc 1 380 43 view .LVU345
 929 01e4 1A96     		str	r6, [sp, #104]
 374:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 930              		.loc 1 374 35 view .LVU346
 931 01e6 4FF0010A 		mov	r10, #1
ARM GAS  /tmp/cc4xqBG2.s 			page 40


 932 01ea 4FF07F0B 		mov	fp, #127
 933 01ee 4FF00909 		mov	r9, #9
 384:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 934              		.loc 1 384 41 view .LVU347
 935 01f2 8425     		movs	r5, #132
 936 01f4 8026     		movs	r6, #128
 387:Src/main.c    ****   {
 937              		.loc 1 387 7 view .LVU348
 938 01f6 12A9     		add	r1, sp, #72
 939 01f8 2046     		mov	r0, r4
 374:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 940              		.loc 1 374 35 view .LVU349
 941 01fa CDE914AB 		strd	r10, [sp, #80]
 381:Src/main.c    ****   sConfigInjected.AutoInjectedConv = DISABLE;
 942              		.loc 1 381 49 view .LVU350
 943 01fe ADF86C30 		strh	r3, [sp, #108]	@ movhi
 383:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConv = ADC_EXTERNALTRIGINJEC_T1_CC4;
 944              		.loc 1 383 40 view .LVU351
 945 0202 8DF86E30 		strb	r3, [sp, #110]
 384:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 946              		.loc 1 384 3 is_stmt 1 view .LVU352
 385:Src/main.c    ****   sConfigInjected.InjecOversamplingMode = DISABLE;
 947              		.loc 1 385 3 view .LVU353
 384:Src/main.c    ****   sConfigInjected.ExternalTrigInjecConvEdge = ADC_EXTERNALTRIGINJECCONV_EDGE_RISING;
 948              		.loc 1 384 41 is_stmt 0 view .LVU354
 949 0206 CDE91C56 		strd	r5, [sp, #112]
 386:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc2, &sConfigInjected) != HAL_OK)
 950              		.loc 1 386 3 is_stmt 1 view .LVU355
 386:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc2, &sConfigInjected) != HAL_OK)
 951              		.loc 1 386 41 is_stmt 0 view .LVU356
 952 020a 8DF87830 		strb	r3, [sp, #120]
 387:Src/main.c    ****   {
 953              		.loc 1 387 3 is_stmt 1 view .LVU357
 374:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_1;
 954              		.loc 1 374 35 is_stmt 0 view .LVU358
 955 020e CDE91289 		strd	r8, [sp, #72]
 387:Src/main.c    ****   {
 956              		.loc 1 387 7 view .LVU359
 957 0212 FFF7FEFF 		bl	HAL_ADCEx_InjectedConfigChannel
 958              	.LVL18:
 387:Src/main.c    ****   {
 959              		.loc 1 387 6 view .LVU360
 960 0216 08B1     		cbz	r0, .L23
 389:Src/main.c    ****   }
 961              		.loc 1 389 5 is_stmt 1 view .LVU361
 962              	.LBB350:
 963              	.LBI350:
 782:Src/main.c    **** {
 964              		.loc 1 782 6 view .LVU362
 965              	.LBE350:
 966              	.LBE359:
 967              	.LBE364:
 786:Src/main.c    ****   while (1)
 968              		.loc 1 786 3 view .LVU363
 969              	.LBB365:
 970              	.LBB360:
 971              	.LBB353:
ARM GAS  /tmp/cc4xqBG2.s 			page 41


 972              	.LBB351:
 973              	.LBI351:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 974              		.loc 2 207 27 view .LVU364
 975              	.LBB352:
 976              		.loc 2 209 3 view .LVU365
 977              		.syntax unified
 978              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 979 0218 72B6     		cpsid i
 980              	@ 0 "" 2
 981              		.thumb
 982              		.syntax unified
 983              	.L24:
 984              	.LBE352:
 985              	.LBE351:
 986              	.LBE353:
 987              	.LBE360:
 988              	.LBE365:
 787:Src/main.c    ****   {
 989              		.loc 1 787 3 view .LVU366
 990              		.loc 1 789 3 view .LVU367
 787:Src/main.c    ****   {
 991              		.loc 1 787 3 view .LVU368
 992              		.loc 1 789 3 view .LVU369
 993 021a FEE7     		b	.L24
 994              	.L23:
 995              	.LBB366:
 996              	.LBB361:
 394:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_2;
 997              		.loc 1 394 3 view .LVU370
 395:Src/main.c    ****   if (HAL_ADCEx_InjectedConfigChannel(&hadc2, &sConfigInjected) != HAL_OK)
 998              		.loc 1 395 3 view .LVU371
 394:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_2;
 999              		.loc 1 394 35 is_stmt 0 view .LVU372
 1000 021c 2F4A     		ldr	r2, .L71+28
 1001 021e 40F20F13 		movw	r3, #271
 396:Src/main.c    ****   {
 1002              		.loc 1 396 7 view .LVU373
 1003 0222 2046     		mov	r0, r4
 1004 0224 12A9     		add	r1, sp, #72
 394:Src/main.c    ****   sConfigInjected.InjectedRank = ADC_INJECTED_RANK_2;
 1005              		.loc 1 394 35 view .LVU374
 1006 0226 CDE91223 		strd	r2, [sp, #72]
 396:Src/main.c    ****   {
 1007              		.loc 1 396 3 is_stmt 1 view .LVU375
 396:Src/main.c    ****   {
 1008              		.loc 1 396 7 is_stmt 0 view .LVU376
 1009 022a FFF7FEFF 		bl	HAL_ADCEx_InjectedConfigChannel
 1010              	.LVL19:
 396:Src/main.c    ****   {
 1011              		.loc 1 396 6 view .LVU377
 1012 022e 08B1     		cbz	r0, .L25
 398:Src/main.c    ****   }
 1013              		.loc 1 398 5 is_stmt 1 view .LVU378
 1014              	.LBB354:
 1015              	.LBI354:
 782:Src/main.c    **** {
ARM GAS  /tmp/cc4xqBG2.s 			page 42


 1016              		.loc 1 782 6 view .LVU379
 1017              	.LBE354:
 1018              	.LBE361:
 1019              	.LBE366:
 786:Src/main.c    ****   while (1)
 1020              		.loc 1 786 3 view .LVU380
 1021              	.LBB367:
 1022              	.LBB362:
 1023              	.LBB357:
 1024              	.LBB355:
 1025              	.LBI355:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1026              		.loc 2 207 27 view .LVU381
 1027              	.LBB356:
 1028              		.loc 2 209 3 view .LVU382
 1029              		.syntax unified
 1030              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1031 0230 72B6     		cpsid i
 1032              	@ 0 "" 2
 1033              		.thumb
 1034              		.syntax unified
 1035              	.L26:
 1036              	.LBE356:
 1037              	.LBE355:
 1038              	.LBE357:
 1039              	.LBE362:
 1040              	.LBE367:
 787:Src/main.c    ****   {
 1041              		.loc 1 787 3 view .LVU383
 1042              		.loc 1 789 3 view .LVU384
 787:Src/main.c    ****   {
 1043              		.loc 1 787 3 view .LVU385
 1044              		.loc 1 789 3 view .LVU386
 1045 0232 FEE7     		b	.L26
 1046              	.L25:
 122:Src/main.c    ****   MX_OPAMP1_Init();
 1047              		.loc 1 122 3 view .LVU387
 1048              	.LBB368:
 1049              	.LBI368:
 411:Src/main.c    **** {
 1050              		.loc 1 411 13 view .LVU388
 1051              	.LBB369:
 421:Src/main.c    ****   if (HAL_CORDIC_Init(&hcordic) != HAL_OK)
 1052              		.loc 1 421 3 view .LVU389
 421:Src/main.c    ****   if (HAL_CORDIC_Init(&hcordic) != HAL_OK)
 1053              		.loc 1 421 20 is_stmt 0 view .LVU390
 1054 0234 2D48     		ldr	r0, .L71+44
 1055 0236 2E4B     		ldr	r3, .L71+48
 1056 0238 0360     		str	r3, [r0]
 422:Src/main.c    ****   {
 1057              		.loc 1 422 3 is_stmt 1 view .LVU391
 422:Src/main.c    ****   {
 1058              		.loc 1 422 7 is_stmt 0 view .LVU392
 1059 023a FFF7FEFF 		bl	HAL_CORDIC_Init
 1060              	.LVL20:
 422:Src/main.c    ****   {
 1061              		.loc 1 422 6 view .LVU393
ARM GAS  /tmp/cc4xqBG2.s 			page 43


 1062 023e 08B1     		cbz	r0, .L27
 424:Src/main.c    ****   }
 1063              		.loc 1 424 5 is_stmt 1 view .LVU394
 1064              	.LBB370:
 1065              	.LBI370:
 782:Src/main.c    **** {
 1066              		.loc 1 782 6 view .LVU395
 1067              	.LBE370:
 1068              	.LBE369:
 1069              	.LBE368:
 786:Src/main.c    ****   while (1)
 1070              		.loc 1 786 3 view .LVU396
 1071              	.LBB375:
 1072              	.LBB374:
 1073              	.LBB373:
 1074              	.LBB371:
 1075              	.LBI371:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1076              		.loc 2 207 27 view .LVU397
 1077              	.LBB372:
 1078              		.loc 2 209 3 view .LVU398
 1079              		.syntax unified
 1080              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1081 0240 72B6     		cpsid i
 1082              	@ 0 "" 2
 1083              		.thumb
 1084              		.syntax unified
 1085              	.L28:
 1086              	.LBE372:
 1087              	.LBE371:
 1088              	.LBE373:
 1089              	.LBE374:
 1090              	.LBE375:
 787:Src/main.c    ****   {
 1091              		.loc 1 787 3 view .LVU399
 1092              		.loc 1 789 3 view .LVU400
 787:Src/main.c    ****   {
 1093              		.loc 1 787 3 view .LVU401
 1094              		.loc 1 789 3 view .LVU402
 1095 0242 FEE7     		b	.L28
 1096              	.L27:
 123:Src/main.c    ****   MX_OPAMP2_Init();
 1097              		.loc 1 123 3 view .LVU403
 1098              	.LBB376:
 1099              	.LBI376:
 437:Src/main.c    **** {
 1100              		.loc 1 437 13 view .LVU404
 1101              	.LBB377:
 447:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 1102              		.loc 1 447 3 view .LVU405
 447:Src/main.c    ****   hopamp1.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 1103              		.loc 1 447 20 is_stmt 0 view .LVU406
 1104 0244 2B4B     		ldr	r3, .L71+52
 1105 0246 2C4A     		ldr	r2, .L71+56
 1106 0248 1A60     		str	r2, [r3]
 448:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 1107              		.loc 1 448 3 is_stmt 1 view .LVU407
ARM GAS  /tmp/cc4xqBG2.s 			page 44


 449:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 1108              		.loc 1 449 21 is_stmt 0 view .LVU408
 1109 024a 4026     		movs	r6, #64
 448:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 1110              		.loc 1 448 26 view .LVU409
 1111 024c 0022     		movs	r2, #0
 453:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_16_OR_MINUS_15;
 1112              		.loc 1 453 27 view .LVU410
 1113 024e 4FF40035 		mov	r5, #131072
 454:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 1114              		.loc 1 454 24 view .LVU411
 1115 0252 4FF44044 		mov	r4, #49152
 456:Src/main.c    ****   {
 1116              		.loc 1 456 7 view .LVU412
 1117 0256 1846     		mov	r0, r3
 448:Src/main.c    ****   hopamp1.Init.Mode = OPAMP_PGA_MODE;
 1118              		.loc 1 448 26 view .LVU413
 1119 0258 5A60     		str	r2, [r3, #4]
 449:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 1120              		.loc 1 449 3 is_stmt 1 view .LVU414
 450:Src/main.c    ****   hopamp1.Init.InternalOutput = DISABLE;
 1121              		.loc 1 450 34 is_stmt 0 view .LVU415
 1122 025a 1A61     		str	r2, [r3, #16]
 451:Src/main.c    ****   hopamp1.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 1123              		.loc 1 451 31 view .LVU416
 1124 025c 1A75     		strb	r2, [r3, #20]
 452:Src/main.c    ****   hopamp1.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 1125              		.loc 1 452 39 view .LVU417
 1126 025e 9A61     		str	r2, [r3, #24]
 455:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 1127              		.loc 1 455 29 view .LVU418
 1128 0260 DA62     		str	r2, [r3, #44]
 449:Src/main.c    ****   hopamp1.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 1129              		.loc 1 449 21 view .LVU419
 1130 0262 9E60     		str	r6, [r3, #8]
 450:Src/main.c    ****   hopamp1.Init.InternalOutput = DISABLE;
 1131              		.loc 1 450 3 is_stmt 1 view .LVU420
 451:Src/main.c    ****   hopamp1.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 1132              		.loc 1 451 3 view .LVU421
 452:Src/main.c    ****   hopamp1.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 1133              		.loc 1 452 3 view .LVU422
 453:Src/main.c    ****   hopamp1.Init.PgaGain = OPAMP_PGA_GAIN_16_OR_MINUS_15;
 1134              		.loc 1 453 3 view .LVU423
 454:Src/main.c    ****   hopamp1.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 1135              		.loc 1 454 24 is_stmt 0 view .LVU424
 1136 0264 C3E90954 		strd	r5, r4, [r3, #36]
 455:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp1) != HAL_OK)
 1137              		.loc 1 455 3 is_stmt 1 view .LVU425
 456:Src/main.c    ****   {
 1138              		.loc 1 456 3 view .LVU426
 456:Src/main.c    ****   {
 1139              		.loc 1 456 7 is_stmt 0 view .LVU427
 1140 0268 FFF7FEFF 		bl	HAL_OPAMP_Init
 1141              	.LVL21:
 456:Src/main.c    ****   {
 1142              		.loc 1 456 6 view .LVU428
 1143 026c 08B1     		cbz	r0, .L29
ARM GAS  /tmp/cc4xqBG2.s 			page 45


 458:Src/main.c    ****   }
 1144              		.loc 1 458 5 is_stmt 1 view .LVU429
 1145              	.LBB378:
 1146              	.LBI378:
 782:Src/main.c    **** {
 1147              		.loc 1 782 6 view .LVU430
 1148              	.LBE378:
 1149              	.LBE377:
 1150              	.LBE376:
 786:Src/main.c    ****   while (1)
 1151              		.loc 1 786 3 view .LVU431
 1152              	.LBB383:
 1153              	.LBB382:
 1154              	.LBB381:
 1155              	.LBB379:
 1156              	.LBI379:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1157              		.loc 2 207 27 view .LVU432
 1158              	.LBB380:
 1159              		.loc 2 209 3 view .LVU433
 1160              		.syntax unified
 1161              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1162 026e 72B6     		cpsid i
 1163              	@ 0 "" 2
 1164              		.thumb
 1165              		.syntax unified
 1166              	.L30:
 1167              	.LBE380:
 1168              	.LBE379:
 1169              	.LBE381:
 1170              	.LBE382:
 1171              	.LBE383:
 787:Src/main.c    ****   {
 1172              		.loc 1 787 3 view .LVU434
 1173              		.loc 1 789 3 view .LVU435
 787:Src/main.c    ****   {
 1174              		.loc 1 787 3 view .LVU436
 1175              		.loc 1 789 3 view .LVU437
 1176 0270 FEE7     		b	.L30
 1177              	.L29:
 124:Src/main.c    ****   MX_OPAMP3_Init();
 1178              		.loc 1 124 3 view .LVU438
 1179              	.LBB384:
 1180              	.LBI384:
 471:Src/main.c    **** {
 1181              		.loc 1 471 13 view .LVU439
 1182              	.LBB385:
 481:Src/main.c    ****   hopamp2.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 1183              		.loc 1 481 3 view .LVU440
 481:Src/main.c    ****   hopamp2.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 1184              		.loc 1 481 20 is_stmt 0 view .LVU441
 1185 0272 224B     		ldr	r3, .L71+60
 1186 0274 224A     		ldr	r2, .L71+64
 484:Src/main.c    ****   hopamp2.Init.InternalOutput = DISABLE;
 1187              		.loc 1 484 34 view .LVU442
 1188 0276 1861     		str	r0, [r3, #16]
 483:Src/main.c    ****   hopamp2.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
ARM GAS  /tmp/cc4xqBG2.s 			page 46


 1189              		.loc 1 483 21 view .LVU443
 1190 0278 C3E90106 		strd	r0, r6, [r3, #4]
 485:Src/main.c    ****   hopamp2.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 1191              		.loc 1 485 31 view .LVU444
 1192 027c 1875     		strb	r0, [r3, #20]
 486:Src/main.c    ****   hopamp2.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 1193              		.loc 1 486 39 view .LVU445
 1194 027e 9861     		str	r0, [r3, #24]
 489:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp2) != HAL_OK)
 1195              		.loc 1 489 29 view .LVU446
 1196 0280 D862     		str	r0, [r3, #44]
 490:Src/main.c    ****   {
 1197              		.loc 1 490 7 view .LVU447
 1198 0282 1846     		mov	r0, r3
 481:Src/main.c    ****   hopamp2.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 1199              		.loc 1 481 20 view .LVU448
 1200 0284 1A60     		str	r2, [r3]
 482:Src/main.c    ****   hopamp2.Init.Mode = OPAMP_PGA_MODE;
 1201              		.loc 1 482 3 is_stmt 1 view .LVU449
 483:Src/main.c    ****   hopamp2.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 1202              		.loc 1 483 3 view .LVU450
 484:Src/main.c    ****   hopamp2.Init.InternalOutput = DISABLE;
 1203              		.loc 1 484 3 view .LVU451
 485:Src/main.c    ****   hopamp2.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 1204              		.loc 1 485 3 view .LVU452
 486:Src/main.c    ****   hopamp2.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 1205              		.loc 1 486 3 view .LVU453
 487:Src/main.c    ****   hopamp2.Init.PgaGain = OPAMP_PGA_GAIN_16_OR_MINUS_15;
 1206              		.loc 1 487 3 view .LVU454
 488:Src/main.c    ****   hopamp2.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 1207              		.loc 1 488 3 view .LVU455
 489:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp2) != HAL_OK)
 1208              		.loc 1 489 3 view .LVU456
 490:Src/main.c    ****   {
 1209              		.loc 1 490 3 view .LVU457
 488:Src/main.c    ****   hopamp2.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 1210              		.loc 1 488 24 is_stmt 0 view .LVU458
 1211 0286 C3E90954 		strd	r5, r4, [r3, #36]
 490:Src/main.c    ****   {
 1212              		.loc 1 490 7 view .LVU459
 1213 028a FFF7FEFF 		bl	HAL_OPAMP_Init
 1214              	.LVL22:
 490:Src/main.c    ****   {
 1215              		.loc 1 490 6 view .LVU460
 1216 028e 0246     		mov	r2, r0
 1217 0290 08B1     		cbz	r0, .L31
 492:Src/main.c    ****   }
 1218              		.loc 1 492 5 is_stmt 1 view .LVU461
 1219              	.LBB386:
 1220              	.LBI386:
 782:Src/main.c    **** {
 1221              		.loc 1 782 6 view .LVU462
 1222              	.LBE386:
 1223              	.LBE385:
 1224              	.LBE384:
 786:Src/main.c    ****   while (1)
 1225              		.loc 1 786 3 view .LVU463
ARM GAS  /tmp/cc4xqBG2.s 			page 47


 1226              	.LBB391:
 1227              	.LBB390:
 1228              	.LBB389:
 1229              	.LBB387:
 1230              	.LBI387:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1231              		.loc 2 207 27 view .LVU464
 1232              	.LBB388:
 1233              		.loc 2 209 3 view .LVU465
 1234              		.syntax unified
 1235              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1236 0292 72B6     		cpsid i
 1237              	@ 0 "" 2
 1238              		.thumb
 1239              		.syntax unified
 1240              	.L32:
 1241              	.LBE388:
 1242              	.LBE387:
 1243              	.LBE389:
 1244              	.LBE390:
 1245              	.LBE391:
 787:Src/main.c    ****   {
 1246              		.loc 1 787 3 view .LVU466
 1247              		.loc 1 789 3 view .LVU467
 787:Src/main.c    ****   {
 1248              		.loc 1 787 3 view .LVU468
 1249              		.loc 1 789 3 view .LVU469
 1250 0294 FEE7     		b	.L32
 1251              	.L31:
 125:Src/main.c    ****   MX_TIM1_Init();
 1252              		.loc 1 125 3 view .LVU470
 1253              	.LBB392:
 1254              	.LBI392:
 505:Src/main.c    **** {
 1255              		.loc 1 505 13 view .LVU471
 1256              	.LBB393:
 515:Src/main.c    ****   hopamp3.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 1257              		.loc 1 515 3 view .LVU472
 515:Src/main.c    ****   hopamp3.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 1258              		.loc 1 515 20 is_stmt 0 view .LVU473
 1259 0296 1B4B     		ldr	r3, .L71+68
 1260 0298 1B49     		ldr	r1, .L71+72
 521:Src/main.c    ****   hopamp3.Init.PgaGain = OPAMP_PGA_GAIN_16_OR_MINUS_15;
 1261              		.loc 1 521 27 view .LVU474
 1262 029a 5D62     		str	r5, [r3, #36]
 517:Src/main.c    ****   hopamp3.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 1263              		.loc 1 517 21 view .LVU475
 1264 029c C3E90106 		strd	r0, r6, [r3, #4]
 524:Src/main.c    ****   {
 1265              		.loc 1 524 7 view .LVU476
 1266 02a0 1846     		mov	r0, r3
 519:Src/main.c    ****   hopamp3.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 1267              		.loc 1 519 31 view .LVU477
 1268 02a2 0126     		movs	r6, #1
 518:Src/main.c    ****   hopamp3.Init.InternalOutput = ENABLE;
 1269              		.loc 1 518 34 view .LVU478
 1270 02a4 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/cc4xqBG2.s 			page 48


 520:Src/main.c    ****   hopamp3.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 1271              		.loc 1 520 39 view .LVU479
 1272 02a6 9A61     		str	r2, [r3, #24]
 523:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp3) != HAL_OK)
 1273              		.loc 1 523 29 view .LVU480
 1274 02a8 C3E90A42 		strd	r4, r2, [r3, #40]
 515:Src/main.c    ****   hopamp3.Init.PowerMode = OPAMP_POWERMODE_NORMALSPEED;
 1275              		.loc 1 515 20 view .LVU481
 1276 02ac 1960     		str	r1, [r3]
 516:Src/main.c    ****   hopamp3.Init.Mode = OPAMP_PGA_MODE;
 1277              		.loc 1 516 3 is_stmt 1 view .LVU482
 517:Src/main.c    ****   hopamp3.Init.NonInvertingInput = OPAMP_NONINVERTINGINPUT_IO0;
 1278              		.loc 1 517 3 view .LVU483
 518:Src/main.c    ****   hopamp3.Init.InternalOutput = ENABLE;
 1279              		.loc 1 518 3 view .LVU484
 519:Src/main.c    ****   hopamp3.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 1280              		.loc 1 519 3 view .LVU485
 519:Src/main.c    ****   hopamp3.Init.TimerControlledMuxmode = OPAMP_TIMERCONTROLLEDMUXMODE_DISABLE;
 1281              		.loc 1 519 31 is_stmt 0 view .LVU486
 1282 02ae 1E75     		strb	r6, [r3, #20]
 520:Src/main.c    ****   hopamp3.Init.PgaConnect = OPAMP_PGA_CONNECT_INVERTINGINPUT_IO0_BIAS;
 1283              		.loc 1 520 3 is_stmt 1 view .LVU487
 521:Src/main.c    ****   hopamp3.Init.PgaGain = OPAMP_PGA_GAIN_16_OR_MINUS_15;
 1284              		.loc 1 521 3 view .LVU488
 522:Src/main.c    ****   hopamp3.Init.UserTrimming = OPAMP_TRIMMING_FACTORY;
 1285              		.loc 1 522 3 view .LVU489
 523:Src/main.c    ****   if (HAL_OPAMP_Init(&hopamp3) != HAL_OK)
 1286              		.loc 1 523 3 view .LVU490
 524:Src/main.c    ****   {
 1287              		.loc 1 524 3 view .LVU491
 524:Src/main.c    ****   {
 1288              		.loc 1 524 7 is_stmt 0 view .LVU492
 1289 02b0 FFF7FEFF 		bl	HAL_OPAMP_Init
 1290              	.LVL23:
 524:Src/main.c    ****   {
 1291              		.loc 1 524 6 view .LVU493
 1292 02b4 0546     		mov	r5, r0
 1293 02b6 58B3     		cbz	r0, .L33
 526:Src/main.c    ****   }
 1294              		.loc 1 526 5 is_stmt 1 view .LVU494
 1295              	.LBB394:
 1296              	.LBI394:
 782:Src/main.c    **** {
 1297              		.loc 1 782 6 view .LVU495
 1298              	.LBE394:
 1299              	.LBE393:
 1300              	.LBE392:
 786:Src/main.c    ****   while (1)
 1301              		.loc 1 786 3 view .LVU496
 1302              	.LBB399:
 1303              	.LBB398:
 1304              	.LBB397:
 1305              	.LBB395:
 1306              	.LBI395:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1307              		.loc 2 207 27 view .LVU497
 1308              	.LBB396:
ARM GAS  /tmp/cc4xqBG2.s 			page 49


 1309              		.loc 2 209 3 view .LVU498
 1310              		.syntax unified
 1311              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1312 02b8 72B6     		cpsid i
 1313              	@ 0 "" 2
 1314              		.thumb
 1315              		.syntax unified
 1316              	.L34:
 1317              	.LBE396:
 1318              	.LBE395:
 1319              	.LBE397:
 1320              	.LBE398:
 1321              	.LBE399:
 787:Src/main.c    ****   {
 1322              		.loc 1 787 3 view .LVU499
 1323              		.loc 1 789 3 view .LVU500
 787:Src/main.c    ****   {
 1324              		.loc 1 787 3 view .LVU501
 1325              		.loc 1 789 3 view .LVU502
 1326 02ba FEE7     		b	.L34
 1327              	.L72:
 1328 02bc AFF30080 		.align	3
 1329              	.L71:
 1330 02c0 00106032 		.word	845156352
 1331 02c4 0F010000 		.word	271
 1332 02c8 2000F014 		.word	351272992
 1333 02cc 0C000000 		.word	12
 1334 02d0 00100240 		.word	1073876992
 1335 02d4 00080048 		.word	1207961600
 1336 02d8 00000000 		.word	hadc1
 1337 02dc 0800900C 		.word	210763784
 1338 02e0 02003004 		.word	70254594
 1339 02e4 00000000 		.word	hadc2
 1340 02e8 00010050 		.word	1342177536
 1341 02ec 00000000 		.word	hcordic
 1342 02f0 000C0240 		.word	1073875968
 1343 02f4 00000000 		.word	hopamp1
 1344 02f8 00030140 		.word	1073808128
 1345 02fc 00000000 		.word	hopamp2
 1346 0300 04030140 		.word	1073808132
 1347 0304 00000000 		.word	hopamp3
 1348 0308 08030140 		.word	1073808136
 1349 030c 00008CCB 		.word	-880017408
 1350              	.L33:
 126:Src/main.c    ****   MX_TIM2_Init();
 1351              		.loc 1 126 3 view .LVU503
 1352              	.LBB400:
 1353              	.LBI400:
 539:Src/main.c    **** {
 1354              		.loc 1 539 13 view .LVU504
 1355              	.LBB401:
 546:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1356              		.loc 1 546 3 view .LVU505
 553:Src/main.c    ****   htim1.Init.Prescaler = ((TIM_CLOCK_DIVIDER) - 1);
 1357              		.loc 1 553 18 is_stmt 0 view .LVU506
 1358 0310 A24C     		ldr	r4, .L73
 546:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
ARM GAS  /tmp/cc4xqBG2.s 			page 50


 1359              		.loc 1 546 27 view .LVU507
 1360 0312 0690     		str	r0, [sp, #24]
 548:Src/main.c    **** 
 1361              		.loc 1 548 34 view .LVU508
 1362 0314 0146     		mov	r1, r0
 1363 0316 3422     		movs	r2, #52
 1364 0318 12A8     		add	r0, sp, #72
 546:Src/main.c    ****   TIM_OC_InitTypeDef sConfigOC = {0};
 1365              		.loc 1 546 27 view .LVU509
 1366 031a CDE90755 		strd	r5, r5, [sp, #28]
 547:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1367              		.loc 1 547 3 is_stmt 1 view .LVU510
 547:Src/main.c    ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 1368              		.loc 1 547 22 is_stmt 0 view .LVU511
 1369 031e CDE90A55 		strd	r5, r5, [sp, #40]
 1370 0322 CDE90C55 		strd	r5, r5, [sp, #48]
 1371 0326 CDE90E55 		strd	r5, r5, [sp, #56]
 1372 032a 1095     		str	r5, [sp, #64]
 548:Src/main.c    **** 
 1373              		.loc 1 548 3 is_stmt 1 view .LVU512
 553:Src/main.c    ****   htim1.Init.Prescaler = ((TIM_CLOCK_DIVIDER) - 1);
 1374              		.loc 1 553 18 is_stmt 0 view .LVU513
 1375 032c 9C4F     		ldr	r7, .L73+4
 548:Src/main.c    **** 
 1376              		.loc 1 548 34 view .LVU514
 1377 032e FFF7FEFF 		bl	memset
 1378              	.LVL24:
 553:Src/main.c    ****   htim1.Init.Prescaler = ((TIM_CLOCK_DIVIDER) - 1);
 1379              		.loc 1 553 3 is_stmt 1 view .LVU515
 555:Src/main.c    ****   htim1.Init.Period = ((PWM_PERIOD_CYCLES) / 2);
 1380              		.loc 1 555 26 is_stmt 0 view .LVU516
 1381 0332 2021     		movs	r1, #32
 556:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV2;
 1382              		.loc 1 556 21 view .LVU517
 1383 0334 41F29A02 		movw	r2, #4250
 557:Src/main.c    ****   htim1.Init.RepetitionCounter = (REP_COUNTER);
 1384              		.loc 1 557 28 view .LVU518
 1385 0338 4FF48073 		mov	r3, #256
 560:Src/main.c    ****   {
 1386              		.loc 1 560 7 view .LVU519
 1387 033c 2046     		mov	r0, r4
 554:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
 1388              		.loc 1 554 24 view .LVU520
 1389 033e 6560     		str	r5, [r4, #4]
 558:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1390              		.loc 1 558 32 view .LVU521
 1391 0340 6661     		str	r6, [r4, #20]
 559:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 1392              		.loc 1 559 32 view .LVU522
 1393 0342 A561     		str	r5, [r4, #24]
 553:Src/main.c    ****   htim1.Init.Prescaler = ((TIM_CLOCK_DIVIDER) - 1);
 1394              		.loc 1 553 18 view .LVU523
 1395 0344 2760     		str	r7, [r4]
 554:Src/main.c    ****   htim1.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
 1396              		.loc 1 554 3 is_stmt 1 view .LVU524
 555:Src/main.c    ****   htim1.Init.Period = ((PWM_PERIOD_CYCLES) / 2);
 1397              		.loc 1 555 3 view .LVU525
ARM GAS  /tmp/cc4xqBG2.s 			page 51


 556:Src/main.c    ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV2;
 1398              		.loc 1 556 21 is_stmt 0 view .LVU526
 1399 0346 C4E90212 		strd	r1, r2, [r4, #8]
 557:Src/main.c    ****   htim1.Init.RepetitionCounter = (REP_COUNTER);
 1400              		.loc 1 557 3 is_stmt 1 view .LVU527
 557:Src/main.c    ****   htim1.Init.RepetitionCounter = (REP_COUNTER);
 1401              		.loc 1 557 28 is_stmt 0 view .LVU528
 1402 034a 2361     		str	r3, [r4, #16]
 558:Src/main.c    ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1403              		.loc 1 558 3 is_stmt 1 view .LVU529
 559:Src/main.c    ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 1404              		.loc 1 559 3 view .LVU530
 560:Src/main.c    ****   {
 1405              		.loc 1 560 3 view .LVU531
 560:Src/main.c    ****   {
 1406              		.loc 1 560 7 is_stmt 0 view .LVU532
 1407 034c FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1408              	.LVL25:
 560:Src/main.c    ****   {
 1409              		.loc 1 560 6 view .LVU533
 1410 0350 08B1     		cbz	r0, .L35
 562:Src/main.c    ****   }
 1411              		.loc 1 562 5 is_stmt 1 view .LVU534
 1412              	.LBB402:
 1413              	.LBI402:
 782:Src/main.c    **** {
 1414              		.loc 1 782 6 view .LVU535
 1415              	.LBE402:
 1416              	.LBE401:
 1417              	.LBE400:
 786:Src/main.c    ****   while (1)
 1418              		.loc 1 786 3 view .LVU536
 1419              	.LBB445:
 1420              	.LBB430:
 1421              	.LBB405:
 1422              	.LBB403:
 1423              	.LBI403:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1424              		.loc 2 207 27 view .LVU537
 1425              	.LBB404:
 1426              		.loc 2 209 3 view .LVU538
 1427              		.syntax unified
 1428              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1429 0352 72B6     		cpsid i
 1430              	@ 0 "" 2
 1431              		.thumb
 1432              		.syntax unified
 1433              	.L36:
 1434              	.LBE404:
 1435              	.LBE403:
 1436              	.LBE405:
 1437              	.LBE430:
 1438              	.LBE445:
 787:Src/main.c    ****   {
 1439              		.loc 1 787 3 view .LVU539
 1440              		.loc 1 789 3 view .LVU540
 787:Src/main.c    ****   {
ARM GAS  /tmp/cc4xqBG2.s 			page 52


 1441              		.loc 1 787 3 view .LVU541
 1442              		.loc 1 789 3 view .LVU542
 1443 0354 FEE7     		b	.L36
 1444              	.L35:
 1445              	.LBB446:
 1446              	.LBB431:
 564:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1447              		.loc 1 564 3 view .LVU543
 565:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1448              		.loc 1 565 3 view .LVU544
 564:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1449              		.loc 1 564 37 is_stmt 0 view .LVU545
 1450 0356 0023     		movs	r3, #0
 1451 0358 7022     		movs	r2, #112
 566:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1452              		.loc 1 566 33 view .LVU546
 1453 035a 0890     		str	r0, [sp, #32]
 567:Src/main.c    ****   {
 1454              		.loc 1 567 7 view .LVU547
 1455 035c 06A9     		add	r1, sp, #24
 1456 035e 2046     		mov	r0, r4
 564:Src/main.c    ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1457              		.loc 1 564 37 view .LVU548
 1458 0360 CDE90623 		strd	r2, [sp, #24]
 566:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1459              		.loc 1 566 3 is_stmt 1 view .LVU549
 567:Src/main.c    ****   {
 1460              		.loc 1 567 3 view .LVU550
 567:Src/main.c    ****   {
 1461              		.loc 1 567 7 is_stmt 0 view .LVU551
 1462 0364 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1463              	.LVL26:
 567:Src/main.c    ****   {
 1464              		.loc 1 567 6 view .LVU552
 1465 0368 0346     		mov	r3, r0
 1466 036a 08B1     		cbz	r0, .L37
 569:Src/main.c    ****   }
 1467              		.loc 1 569 5 is_stmt 1 view .LVU553
 1468              	.LBB406:
 1469              	.LBI406:
 782:Src/main.c    **** {
 1470              		.loc 1 782 6 view .LVU554
 1471              	.LBE406:
 1472              	.LBE431:
 1473              	.LBE446:
 786:Src/main.c    ****   while (1)
 1474              		.loc 1 786 3 view .LVU555
 1475              	.LBB447:
 1476              	.LBB432:
 1477              	.LBB409:
 1478              	.LBB407:
 1479              	.LBI407:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1480              		.loc 2 207 27 view .LVU556
 1481              	.LBB408:
 1482              		.loc 2 209 3 view .LVU557
 1483              		.syntax unified
ARM GAS  /tmp/cc4xqBG2.s 			page 53


 1484              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1485 036c 72B6     		cpsid i
 1486              	@ 0 "" 2
 1487              		.thumb
 1488              		.syntax unified
 1489              	.L38:
 1490              	.LBE408:
 1491              	.LBE407:
 1492              	.LBE409:
 1493              	.LBE432:
 1494              	.LBE447:
 787:Src/main.c    ****   {
 1495              		.loc 1 787 3 view .LVU558
 1496              		.loc 1 789 3 view .LVU559
 787:Src/main.c    ****   {
 1497              		.loc 1 787 3 view .LVU560
 1498              		.loc 1 789 3 view .LVU561
 1499 036e FEE7     		b	.L38
 1500              	.L37:
 1501              	.LBB448:
 1502              	.LBB433:
 571:Src/main.c    ****   sConfigOC.Pulse = ((PWM_PERIOD_CYCLES) / 4);
 1503              		.loc 1 571 3 view .LVU562
 572:Src/main.c    ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1504              		.loc 1 572 3 view .LVU563
 573:Src/main.c    ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1505              		.loc 1 573 3 view .LVU564
 574:Src/main.c    ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 1506              		.loc 1 574 3 view .LVU565
 575:Src/main.c    ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1507              		.loc 1 575 3 view .LVU566
 576:Src/main.c    ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 1508              		.loc 1 576 3 view .LVU567
 571:Src/main.c    ****   sConfigOC.Pulse = ((PWM_PERIOD_CYCLES) / 4);
 1509              		.loc 1 571 20 is_stmt 0 view .LVU568
 1510 0370 6026     		movs	r6, #96
 1511 0372 40F64D07 		movw	r7, #2125
 1512 0376 CDE90A67 		strd	r6, [sp, #40]
 578:Src/main.c    ****   {
 1513              		.loc 1 578 7 view .LVU569
 1514 037a 0246     		mov	r2, r0
 571:Src/main.c    ****   sConfigOC.Pulse = ((PWM_PERIOD_CYCLES) / 4);
 1515              		.loc 1 571 20 view .LVU570
 1516 037c 0026     		movs	r6, #0
 1517 037e 0027     		movs	r7, #0
 578:Src/main.c    ****   {
 1518              		.loc 1 578 7 view .LVU571
 1519 0380 0AA9     		add	r1, sp, #40
 1520 0382 2046     		mov	r0, r4
 577:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1521              		.loc 1 577 26 view .LVU572
 1522 0384 1093     		str	r3, [sp, #64]
 571:Src/main.c    ****   sConfigOC.Pulse = ((PWM_PERIOD_CYCLES) / 4);
 1523              		.loc 1 571 20 view .LVU573
 1524 0386 CDE90C67 		strd	r6, [sp, #48]
 1525 038a CDE90E67 		strd	r6, [sp, #56]
 577:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
ARM GAS  /tmp/cc4xqBG2.s 			page 54


 1526              		.loc 1 577 3 is_stmt 1 view .LVU574
 578:Src/main.c    ****   {
 1527              		.loc 1 578 3 view .LVU575
 578:Src/main.c    ****   {
 1528              		.loc 1 578 7 is_stmt 0 view .LVU576
 1529 038e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1530              	.LVL27:
 578:Src/main.c    ****   {
 1531              		.loc 1 578 6 view .LVU577
 1532 0392 08B1     		cbz	r0, .L39
 580:Src/main.c    ****   }
 1533              		.loc 1 580 5 is_stmt 1 view .LVU578
 1534              	.LBB410:
 1535              	.LBI410:
 782:Src/main.c    **** {
 1536              		.loc 1 782 6 view .LVU579
 1537              	.LBE410:
 1538              	.LBE433:
 1539              	.LBE448:
 786:Src/main.c    ****   while (1)
 1540              		.loc 1 786 3 view .LVU580
 1541              	.LBB449:
 1542              	.LBB434:
 1543              	.LBB413:
 1544              	.LBB411:
 1545              	.LBI411:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1546              		.loc 2 207 27 view .LVU581
 1547              	.LBB412:
 1548              		.loc 2 209 3 view .LVU582
 1549              		.syntax unified
 1550              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1551 0394 72B6     		cpsid i
 1552              	@ 0 "" 2
 1553              		.thumb
 1554              		.syntax unified
 1555              	.L40:
 1556              	.LBE412:
 1557              	.LBE411:
 1558              	.LBE413:
 1559              	.LBE434:
 1560              	.LBE449:
 787:Src/main.c    ****   {
 1561              		.loc 1 787 3 view .LVU583
 1562              		.loc 1 789 3 view .LVU584
 787:Src/main.c    ****   {
 1563              		.loc 1 787 3 view .LVU585
 1564              		.loc 1 789 3 view .LVU586
 1565 0396 FEE7     		b	.L40
 1566              	.L39:
 1567              	.LBB450:
 1568              	.LBB435:
 582:Src/main.c    ****   {
 1569              		.loc 1 582 3 view .LVU587
 582:Src/main.c    ****   {
 1570              		.loc 1 582 7 is_stmt 0 view .LVU588
 1571 0398 0422     		movs	r2, #4
ARM GAS  /tmp/cc4xqBG2.s 			page 55


 1572 039a 0AA9     		add	r1, sp, #40
 1573 039c 2046     		mov	r0, r4
 1574 039e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1575              	.LVL28:
 582:Src/main.c    ****   {
 1576              		.loc 1 582 6 view .LVU589
 1577 03a2 08B1     		cbz	r0, .L41
 584:Src/main.c    ****   }
 1578              		.loc 1 584 5 is_stmt 1 view .LVU590
 1579              	.LBB414:
 1580              	.LBI414:
 782:Src/main.c    **** {
 1581              		.loc 1 782 6 view .LVU591
 1582              	.LBE414:
 1583              	.LBE435:
 1584              	.LBE450:
 786:Src/main.c    ****   while (1)
 1585              		.loc 1 786 3 view .LVU592
 1586              	.LBB451:
 1587              	.LBB436:
 1588              	.LBB417:
 1589              	.LBB415:
 1590              	.LBI415:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1591              		.loc 2 207 27 view .LVU593
 1592              	.LBB416:
 1593              		.loc 2 209 3 view .LVU594
 1594              		.syntax unified
 1595              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1596 03a4 72B6     		cpsid i
 1597              	@ 0 "" 2
 1598              		.thumb
 1599              		.syntax unified
 1600              	.L42:
 1601              	.LBE416:
 1602              	.LBE415:
 1603              	.LBE417:
 1604              	.LBE436:
 1605              	.LBE451:
 787:Src/main.c    ****   {
 1606              		.loc 1 787 3 view .LVU595
 1607              		.loc 1 789 3 view .LVU596
 787:Src/main.c    ****   {
 1608              		.loc 1 787 3 view .LVU597
 1609              		.loc 1 789 3 view .LVU598
 1610 03a6 FEE7     		b	.L42
 1611              	.L41:
 1612              	.LBB452:
 1613              	.LBB437:
 586:Src/main.c    ****   {
 1614              		.loc 1 586 3 view .LVU599
 586:Src/main.c    ****   {
 1615              		.loc 1 586 7 is_stmt 0 view .LVU600
 1616 03a8 0822     		movs	r2, #8
 1617 03aa 0AA9     		add	r1, sp, #40
 1618 03ac 2046     		mov	r0, r4
 1619 03ae FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
ARM GAS  /tmp/cc4xqBG2.s 			page 56


 1620              	.LVL29:
 586:Src/main.c    ****   {
 1621              		.loc 1 586 6 view .LVU601
 1622 03b2 08B1     		cbz	r0, .L43
 588:Src/main.c    ****   }
 1623              		.loc 1 588 5 is_stmt 1 view .LVU602
 1624              	.LBB418:
 1625              	.LBI418:
 782:Src/main.c    **** {
 1626              		.loc 1 782 6 view .LVU603
 1627              	.LBE418:
 1628              	.LBE437:
 1629              	.LBE452:
 786:Src/main.c    ****   while (1)
 1630              		.loc 1 786 3 view .LVU604
 1631              	.LBB453:
 1632              	.LBB438:
 1633              	.LBB421:
 1634              	.LBB419:
 1635              	.LBI419:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1636              		.loc 2 207 27 view .LVU605
 1637              	.LBB420:
 1638              		.loc 2 209 3 view .LVU606
 1639              		.syntax unified
 1640              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1641 03b4 72B6     		cpsid i
 1642              	@ 0 "" 2
 1643              		.thumb
 1644              		.syntax unified
 1645              	.L44:
 1646              	.LBE420:
 1647              	.LBE419:
 1648              	.LBE421:
 1649              	.LBE438:
 1650              	.LBE453:
 787:Src/main.c    ****   {
 1651              		.loc 1 787 3 view .LVU607
 1652              		.loc 1 789 3 view .LVU608
 787:Src/main.c    ****   {
 1653              		.loc 1 787 3 view .LVU609
 1654              		.loc 1 789 3 view .LVU610
 1655 03b6 FEE7     		b	.L44
 1656              	.L43:
 1657              	.LBB454:
 1658              	.LBB439:
 590:Src/main.c    ****   sConfigOC.Pulse = (((PWM_PERIOD_CYCLES) / 2) - (HTMIN));
 1659              		.loc 1 590 3 view .LVU611
 591:Src/main.c    ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 1660              		.loc 1 591 3 view .LVU612
 590:Src/main.c    ****   sConfigOC.Pulse = (((PWM_PERIOD_CYCLES) / 2) - (HTMIN));
 1661              		.loc 1 590 20 is_stmt 0 view .LVU613
 1662 03b8 4FF07008 		mov	r8, #112
 1663 03bc 41F29909 		movw	r9, #4249
 592:Src/main.c    ****   {
 1664              		.loc 1 592 7 view .LVU614
 1665 03c0 0C22     		movs	r2, #12
ARM GAS  /tmp/cc4xqBG2.s 			page 57


 1666 03c2 0AA9     		add	r1, sp, #40
 1667 03c4 2046     		mov	r0, r4
 590:Src/main.c    ****   sConfigOC.Pulse = (((PWM_PERIOD_CYCLES) / 2) - (HTMIN));
 1668              		.loc 1 590 20 view .LVU615
 1669 03c6 CDE90A89 		strd	r8, [sp, #40]
 592:Src/main.c    ****   {
 1670              		.loc 1 592 3 is_stmt 1 view .LVU616
 592:Src/main.c    ****   {
 1671              		.loc 1 592 7 is_stmt 0 view .LVU617
 1672 03ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1673              	.LVL30:
 592:Src/main.c    ****   {
 1674              		.loc 1 592 6 view .LVU618
 1675 03ce 0346     		mov	r3, r0
 1676 03d0 08B1     		cbz	r0, .L45
 594:Src/main.c    ****   }
 1677              		.loc 1 594 5 is_stmt 1 view .LVU619
 1678              	.LBB422:
 1679              	.LBI422:
 782:Src/main.c    **** {
 1680              		.loc 1 782 6 view .LVU620
 1681              	.LBE422:
 1682              	.LBE439:
 1683              	.LBE454:
 786:Src/main.c    ****   while (1)
 1684              		.loc 1 786 3 view .LVU621
 1685              	.LBB455:
 1686              	.LBB440:
 1687              	.LBB425:
 1688              	.LBB423:
 1689              	.LBI423:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1690              		.loc 2 207 27 view .LVU622
 1691              	.LBB424:
 1692              		.loc 2 209 3 view .LVU623
 1693              		.syntax unified
 1694              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1695 03d2 72B6     		cpsid i
 1696              	@ 0 "" 2
 1697              		.thumb
 1698              		.syntax unified
 1699              	.L46:
 1700              	.LBE424:
 1701              	.LBE423:
 1702              	.LBE425:
 1703              	.LBE440:
 1704              	.LBE455:
 787:Src/main.c    ****   {
 1705              		.loc 1 787 3 view .LVU624
 1706              		.loc 1 789 3 view .LVU625
 787:Src/main.c    ****   {
 1707              		.loc 1 787 3 view .LVU626
 1708              		.loc 1 789 3 view .LVU627
 1709 03d4 FEE7     		b	.L46
 1710              	.L45:
 1711              	.LBB456:
 1712              	.LBB441:
ARM GAS  /tmp/cc4xqBG2.s 			page 58


 596:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 1713              		.loc 1 596 3 view .LVU628
 597:Src/main.c    ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1714              		.loc 1 597 3 view .LVU629
 598:Src/main.c    ****   sBreakDeadTimeConfig.DeadTime = ((DEAD_TIME_COUNTS) / 2);
 1715              		.loc 1 598 3 view .LVU630
 599:Src/main.c    ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1716              		.loc 1 599 3 view .LVU631
 600:Src/main.c    ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1717              		.loc 1 600 3 view .LVU632
 601:Src/main.c    ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1718              		.loc 1 601 3 view .LVU633
 602:Src/main.c    ****   sBreakDeadTimeConfig.BreakAFMode = TIM_BREAK_AFMODE_INPUT;
 1719              		.loc 1 602 3 view .LVU634
 603:Src/main.c    ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 1720              		.loc 1 603 3 view .LVU635
 604:Src/main.c    ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1721              		.loc 1 604 3 view .LVU636
 605:Src/main.c    ****   sBreakDeadTimeConfig.Break2Filter = 3;
 1722              		.loc 1 605 3 view .LVU637
 606:Src/main.c    ****   sBreakDeadTimeConfig.Break2AFMode = TIM_BREAK_AFMODE_INPUT;
 1723              		.loc 1 606 3 view .LVU638
 607:Src/main.c    ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 1724              		.loc 1 607 3 view .LVU639
 596:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 1725              		.loc 1 596 40 is_stmt 0 view .LVU640
 1726 03d6 0022     		movs	r2, #0
 608:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1727              		.loc 1 608 40 view .LVU641
 1728 03d8 1E93     		str	r3, [sp, #120]
 596:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 1729              		.loc 1 596 40 view .LVU642
 1730 03da 3F23     		movs	r3, #63
 1731 03dc CDE91423 		strd	r2, [sp, #80]
 1732 03e0 0022     		movs	r2, #0
 1733 03e2 4FF40053 		mov	r3, #8192
 1734 03e6 CDE91623 		strd	r2, [sp, #88]
 1735 03ea 0022     		movs	r2, #0
 1736 03ec 4FF00073 		mov	r3, #33554432
 1737 03f0 CDE91A23 		strd	r2, [sp, #104]
 609:Src/main.c    ****   {
 1738              		.loc 1 609 7 view .LVU643
 1739 03f4 2046     		mov	r0, r4
 596:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 1740              		.loc 1 596 40 view .LVU644
 1741 03f6 4FF48065 		mov	r5, #1024
 1742 03fa 4FF40064 		mov	r4, #2048
 1743 03fe 0322     		movs	r2, #3
 1744 0400 0023     		movs	r3, #0
 609:Src/main.c    ****   {
 1745              		.loc 1 609 7 view .LVU645
 1746 0402 12A9     		add	r1, sp, #72
 596:Src/main.c    ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 1747              		.loc 1 596 40 view .LVU646
 1748 0404 CDE91867 		strd	r6, [sp, #96]
 1749 0408 CDE91245 		strd	r4, [sp, #72]
 1750 040c CDE91C23 		strd	r2, [sp, #112]
ARM GAS  /tmp/cc4xqBG2.s 			page 59


 608:Src/main.c    ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1751              		.loc 1 608 3 is_stmt 1 view .LVU647
 609:Src/main.c    ****   {
 1752              		.loc 1 609 3 view .LVU648
 609:Src/main.c    ****   {
 1753              		.loc 1 609 7 is_stmt 0 view .LVU649
 1754 0410 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1755              	.LVL31:
 609:Src/main.c    ****   {
 1756              		.loc 1 609 6 view .LVU650
 1757 0414 08B1     		cbz	r0, .L47
 611:Src/main.c    ****   }
 1758              		.loc 1 611 5 is_stmt 1 view .LVU651
 1759              	.LBB426:
 1760              	.LBI426:
 782:Src/main.c    **** {
 1761              		.loc 1 782 6 view .LVU652
 1762              	.LBE426:
 1763              	.LBE441:
 1764              	.LBE456:
 786:Src/main.c    ****   while (1)
 1765              		.loc 1 786 3 view .LVU653
 1766              	.LBB457:
 1767              	.LBB442:
 1768              	.LBB429:
 1769              	.LBB427:
 1770              	.LBI427:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1771              		.loc 2 207 27 view .LVU654
 1772              	.LBB428:
 1773              		.loc 2 209 3 view .LVU655
 1774              		.syntax unified
 1775              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1776 0416 72B6     		cpsid i
 1777              	@ 0 "" 2
 1778              		.thumb
 1779              		.syntax unified
 1780              	.L48:
 1781              	.LBE428:
 1782              	.LBE427:
 1783              	.LBE429:
 1784              	.LBE442:
 1785              	.LBE457:
 787:Src/main.c    ****   {
 1786              		.loc 1 787 3 view .LVU656
 1787              		.loc 1 789 3 view .LVU657
 787:Src/main.c    ****   {
 1788              		.loc 1 787 3 view .LVU658
 1789              		.loc 1 789 3 view .LVU659
 1790 0418 FEE7     		b	.L48
 1791              	.L47:
 1792              	.LBB458:
 1793              	.LBB443:
 616:Src/main.c    **** 
 1794              		.loc 1 616 3 view .LVU660
 1795              	.LBE443:
 1796              	.LBE458:
ARM GAS  /tmp/cc4xqBG2.s 			page 60


 1797              	.LBB459:
 1798              	.LBB460:
 639:Src/main.c    ****   htim2.Init.Prescaler = 0;
 1799              		.loc 1 639 18 is_stmt 0 view .LVU661
 1800 041a 624C     		ldr	r4, .L73+8
 1801              	.LBE460:
 1802              	.LBE459:
 1803              	.LBB497:
 1804              	.LBB444:
 616:Src/main.c    **** 
 1805              		.loc 1 616 3 view .LVU662
 1806 041c 5F48     		ldr	r0, .L73
 1807 041e FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1808              	.LVL32:
 1809              	.LBE444:
 1810              	.LBE497:
 127:Src/main.c    ****   MX_USART2_UART_Init();
 1811              		.loc 1 127 3 is_stmt 1 view .LVU663
 1812              	.LBB498:
 1813              	.LBI459:
 625:Src/main.c    **** {
 1814              		.loc 1 625 13 view .LVU664
 1815              	.LBB485:
 632:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1816              		.loc 1 632 3 view .LVU665
 639:Src/main.c    ****   htim2.Init.Prescaler = 0;
 1817              		.loc 1 639 18 is_stmt 0 view .LVU666
 1818 0422 4FF08043 		mov	r3, #1073741824
 642:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1819              		.loc 1 642 21 view .LVU667
 1820 0426 4FF0FF32 		mov	r2, #-1
 639:Src/main.c    ****   htim2.Init.Prescaler = 0;
 1821              		.loc 1 639 18 view .LVU668
 1822 042a 2360     		str	r3, [r4]
 645:Src/main.c    ****   {
 1823              		.loc 1 645 7 view .LVU669
 1824 042c 2046     		mov	r0, r4
 632:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1825              		.loc 1 632 26 view .LVU670
 1826 042e 0023     		movs	r3, #0
 642:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1827              		.loc 1 642 21 view .LVU671
 1828 0430 E260     		str	r2, [r4, #12]
 640:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1829              		.loc 1 640 24 view .LVU672
 1830 0432 6360     		str	r3, [r4, #4]
 632:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 1831              		.loc 1 632 26 view .LVU673
 1832 0434 CDE91233 		strd	r3, r3, [sp, #72]
 1833 0438 CDE91433 		strd	r3, r3, [sp, #80]
 1834 043c 1693     		str	r3, [sp, #88]
 633:Src/main.c    ****   TIM_IC_InitTypeDef sConfigIC = {0};
 1835              		.loc 1 633 3 is_stmt 1 view .LVU674
 633:Src/main.c    ****   TIM_IC_InitTypeDef sConfigIC = {0};
 1836              		.loc 1 633 27 is_stmt 0 view .LVU675
 1837 043e CDE90633 		strd	r3, r3, [sp, #24]
 1838 0442 0893     		str	r3, [sp, #32]
ARM GAS  /tmp/cc4xqBG2.s 			page 61


 634:Src/main.c    **** 
 1839              		.loc 1 634 3 is_stmt 1 view .LVU676
 634:Src/main.c    **** 
 1840              		.loc 1 634 22 is_stmt 0 view .LVU677
 1841 0444 CDE90A33 		strd	r3, r3, [sp, #40]
 1842 0448 CDE90C33 		strd	r3, r3, [sp, #48]
 639:Src/main.c    ****   htim2.Init.Prescaler = 0;
 1843              		.loc 1 639 3 is_stmt 1 view .LVU678
 640:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 1844              		.loc 1 640 3 view .LVU679
 641:Src/main.c    ****   htim2.Init.Period = 4294967295;
 1845              		.loc 1 641 3 view .LVU680
 641:Src/main.c    ****   htim2.Init.Period = 4294967295;
 1846              		.loc 1 641 26 is_stmt 0 view .LVU681
 1847 044c A360     		str	r3, [r4, #8]
 642:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1848              		.loc 1 642 3 is_stmt 1 view .LVU682
 643:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1849              		.loc 1 643 3 view .LVU683
 643:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1850              		.loc 1 643 28 is_stmt 0 view .LVU684
 1851 044e 2361     		str	r3, [r4, #16]
 644:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1852              		.loc 1 644 3 is_stmt 1 view .LVU685
 644:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 1853              		.loc 1 644 32 is_stmt 0 view .LVU686
 1854 0450 A361     		str	r3, [r4, #24]
 645:Src/main.c    ****   {
 1855              		.loc 1 645 3 is_stmt 1 view .LVU687
 645:Src/main.c    ****   {
 1856              		.loc 1 645 7 is_stmt 0 view .LVU688
 1857 0452 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1858              	.LVL33:
 645:Src/main.c    ****   {
 1859              		.loc 1 645 6 view .LVU689
 1860 0456 08B1     		cbz	r0, .L49
 647:Src/main.c    ****   }
 1861              		.loc 1 647 5 is_stmt 1 view .LVU690
 1862              	.LBB461:
 1863              	.LBI461:
 782:Src/main.c    **** {
 1864              		.loc 1 782 6 view .LVU691
 1865              	.LBE461:
 1866              	.LBE485:
 1867              	.LBE498:
 786:Src/main.c    ****   while (1)
 1868              		.loc 1 786 3 view .LVU692
 1869              	.LBB499:
 1870              	.LBB486:
 1871              	.LBB464:
 1872              	.LBB462:
 1873              	.LBI462:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1874              		.loc 2 207 27 view .LVU693
 1875              	.LBB463:
 1876              		.loc 2 209 3 view .LVU694
 1877              		.syntax unified
ARM GAS  /tmp/cc4xqBG2.s 			page 62


 1878              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1879 0458 72B6     		cpsid i
 1880              	@ 0 "" 2
 1881              		.thumb
 1882              		.syntax unified
 1883              	.L50:
 1884              	.LBE463:
 1885              	.LBE462:
 1886              	.LBE464:
 1887              	.LBE486:
 1888              	.LBE499:
 787:Src/main.c    ****   {
 1889              		.loc 1 787 3 view .LVU695
 1890              		.loc 1 789 3 view .LVU696
 787:Src/main.c    ****   {
 1891              		.loc 1 787 3 view .LVU697
 1892              		.loc 1 789 3 view .LVU698
 1893 045a FEE7     		b	.L50
 1894              	.L49:
 1895              	.LBB500:
 1896              	.LBB487:
 649:Src/main.c    ****   {
 1897              		.loc 1 649 3 view .LVU699
 649:Src/main.c    ****   {
 1898              		.loc 1 649 7 is_stmt 0 view .LVU700
 1899 045c 2046     		mov	r0, r4
 1900 045e FFF7FEFF 		bl	HAL_TIM_IC_Init
 1901              	.LVL34:
 649:Src/main.c    ****   {
 1902              		.loc 1 649 6 view .LVU701
 1903 0462 08B1     		cbz	r0, .L51
 651:Src/main.c    ****   }
 1904              		.loc 1 651 5 is_stmt 1 view .LVU702
 1905              	.LBB465:
 1906              	.LBI465:
 782:Src/main.c    **** {
 1907              		.loc 1 782 6 view .LVU703
 1908              	.LBE465:
 1909              	.LBE487:
 1910              	.LBE500:
 786:Src/main.c    ****   while (1)
 1911              		.loc 1 786 3 view .LVU704
 1912              	.LBB501:
 1913              	.LBB488:
 1914              	.LBB468:
 1915              	.LBB466:
 1916              	.LBI466:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1917              		.loc 2 207 27 view .LVU705
 1918              	.LBB467:
 1919              		.loc 2 209 3 view .LVU706
 1920              		.syntax unified
 1921              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1922 0464 72B6     		cpsid i
 1923              	@ 0 "" 2
 1924              		.thumb
 1925              		.syntax unified
ARM GAS  /tmp/cc4xqBG2.s 			page 63


 1926              	.L52:
 1927              	.LBE467:
 1928              	.LBE466:
 1929              	.LBE468:
 1930              	.LBE488:
 1931              	.LBE501:
 787:Src/main.c    ****   {
 1932              		.loc 1 787 3 view .LVU707
 1933              		.loc 1 789 3 view .LVU708
 787:Src/main.c    ****   {
 1934              		.loc 1 787 3 view .LVU709
 1935              		.loc 1 789 3 view .LVU710
 1936 0466 FEE7     		b	.L52
 1937              	.L51:
 1938              	.LBB502:
 1939              	.LBB489:
 653:Src/main.c    ****   sSlaveConfig.InputTrigger = TIM_TS_TI1FP1;
 1940              		.loc 1 653 3 view .LVU711
 654:Src/main.c    ****   sSlaveConfig.TriggerPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 1941              		.loc 1 654 3 view .LVU712
 653:Src/main.c    ****   sSlaveConfig.InputTrigger = TIM_TS_TI1FP1;
 1942              		.loc 1 653 26 is_stmt 0 view .LVU713
 1943 0468 5023     		movs	r3, #80
 1944 046a 0422     		movs	r2, #4
 655:Src/main.c    ****   sSlaveConfig.TriggerFilter = 0;
 1945              		.loc 1 655 32 view .LVU714
 1946 046c 1490     		str	r0, [sp, #80]
 656:Src/main.c    ****   if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 1947              		.loc 1 656 30 view .LVU715
 1948 046e 1690     		str	r0, [sp, #88]
 657:Src/main.c    ****   {
 1949              		.loc 1 657 7 view .LVU716
 1950 0470 12A9     		add	r1, sp, #72
 1951 0472 2046     		mov	r0, r4
 653:Src/main.c    ****   sSlaveConfig.InputTrigger = TIM_TS_TI1FP1;
 1952              		.loc 1 653 26 view .LVU717
 1953 0474 CDE91223 		strd	r2, [sp, #72]
 655:Src/main.c    ****   sSlaveConfig.TriggerFilter = 0;
 1954              		.loc 1 655 3 is_stmt 1 view .LVU718
 656:Src/main.c    ****   if (HAL_TIM_SlaveConfigSynchro(&htim2, &sSlaveConfig) != HAL_OK)
 1955              		.loc 1 656 3 view .LVU719
 657:Src/main.c    ****   {
 1956              		.loc 1 657 3 view .LVU720
 657:Src/main.c    ****   {
 1957              		.loc 1 657 7 is_stmt 0 view .LVU721
 1958 0478 FFF7FEFF 		bl	HAL_TIM_SlaveConfigSynchro
 1959              	.LVL35:
 657:Src/main.c    ****   {
 1960              		.loc 1 657 6 view .LVU722
 1961 047c 0346     		mov	r3, r0
 1962 047e 08B1     		cbz	r0, .L53
 659:Src/main.c    ****   }
 1963              		.loc 1 659 5 is_stmt 1 view .LVU723
 1964              	.LBB469:
 1965              	.LBI469:
 782:Src/main.c    **** {
 1966              		.loc 1 782 6 view .LVU724
ARM GAS  /tmp/cc4xqBG2.s 			page 64


 1967              	.LBE469:
 1968              	.LBE489:
 1969              	.LBE502:
 786:Src/main.c    ****   while (1)
 1970              		.loc 1 786 3 view .LVU725
 1971              	.LBB503:
 1972              	.LBB490:
 1973              	.LBB472:
 1974              	.LBB470:
 1975              	.LBI470:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1976              		.loc 2 207 27 view .LVU726
 1977              	.LBB471:
 1978              		.loc 2 209 3 view .LVU727
 1979              		.syntax unified
 1980              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1981 0480 72B6     		cpsid i
 1982              	@ 0 "" 2
 1983              		.thumb
 1984              		.syntax unified
 1985              	.L54:
 1986              	.LBE471:
 1987              	.LBE470:
 1988              	.LBE472:
 1989              	.LBE490:
 1990              	.LBE503:
 787:Src/main.c    ****   {
 1991              		.loc 1 787 3 view .LVU728
 1992              		.loc 1 789 3 view .LVU729
 787:Src/main.c    ****   {
 1993              		.loc 1 787 3 view .LVU730
 1994              		.loc 1 789 3 view .LVU731
 1995 0482 FEE7     		b	.L54
 1996              	.L53:
 1997              	.LBB504:
 1998              	.LBB491:
 661:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1999              		.loc 1 661 3 view .LVU732
 663:Src/main.c    ****   {
 2000              		.loc 1 663 7 is_stmt 0 view .LVU733
 2001 0484 06A9     		add	r1, sp, #24
 2002 0486 2046     		mov	r0, r4
 661:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 2003              		.loc 1 661 37 view .LVU734
 2004 0488 0693     		str	r3, [sp, #24]
 662:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2005              		.loc 1 662 3 is_stmt 1 view .LVU735
 662:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 2006              		.loc 1 662 33 is_stmt 0 view .LVU736
 2007 048a 0893     		str	r3, [sp, #32]
 663:Src/main.c    ****   {
 2008              		.loc 1 663 3 is_stmt 1 view .LVU737
 663:Src/main.c    ****   {
 2009              		.loc 1 663 7 is_stmt 0 view .LVU738
 2010 048c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 2011              	.LVL36:
 663:Src/main.c    ****   {
ARM GAS  /tmp/cc4xqBG2.s 			page 65


 2012              		.loc 1 663 6 view .LVU739
 2013 0490 0246     		mov	r2, r0
 2014 0492 08B1     		cbz	r0, .L55
 665:Src/main.c    ****   }
 2015              		.loc 1 665 5 is_stmt 1 view .LVU740
 2016              	.LBB473:
 2017              	.LBI473:
 782:Src/main.c    **** {
 2018              		.loc 1 782 6 view .LVU741
 2019              	.LBE473:
 2020              	.LBE491:
 2021              	.LBE504:
 786:Src/main.c    ****   while (1)
 2022              		.loc 1 786 3 view .LVU742
 2023              	.LBB505:
 2024              	.LBB492:
 2025              	.LBB476:
 2026              	.LBB474:
 2027              	.LBI474:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2028              		.loc 2 207 27 view .LVU743
 2029              	.LBB475:
 2030              		.loc 2 209 3 view .LVU744
 2031              		.syntax unified
 2032              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2033 0494 72B6     		cpsid i
 2034              	@ 0 "" 2
 2035              		.thumb
 2036              		.syntax unified
 2037              	.L56:
 2038              	.LBE475:
 2039              	.LBE474:
 2040              	.LBE476:
 2041              	.LBE492:
 2042              	.LBE505:
 787:Src/main.c    ****   {
 2043              		.loc 1 787 3 view .LVU745
 2044              		.loc 1 789 3 view .LVU746
 787:Src/main.c    ****   {
 2045              		.loc 1 787 3 view .LVU747
 2046              		.loc 1 789 3 view .LVU748
 2047 0496 FEE7     		b	.L56
 2048              	.L55:
 2049              	.LBB506:
 2050              	.LBB493:
 667:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 2051              		.loc 1 667 3 view .LVU749
 668:Src/main.c    ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 2052              		.loc 1 668 3 view .LVU750
 669:Src/main.c    ****   sConfigIC.ICFilter = 0;
 2053              		.loc 1 669 3 view .LVU751
 670:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 2054              		.loc 1 670 3 view .LVU752
 667:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 2055              		.loc 1 667 24 is_stmt 0 view .LVU753
 2056 0498 0026     		movs	r6, #0
 2057 049a 0127     		movs	r7, #1
ARM GAS  /tmp/cc4xqBG2.s 			page 66


 2058 049c CDE90A67 		strd	r6, [sp, #40]
 671:Src/main.c    ****   {
 2059              		.loc 1 671 7 view .LVU754
 2060 04a0 0AA9     		add	r1, sp, #40
 667:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 2061              		.loc 1 667 24 view .LVU755
 2062 04a2 0026     		movs	r6, #0
 2063 04a4 0027     		movs	r7, #0
 671:Src/main.c    ****   {
 2064              		.loc 1 671 7 view .LVU756
 2065 04a6 2046     		mov	r0, r4
 667:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 2066              		.loc 1 667 24 view .LVU757
 2067 04a8 CDE90C67 		strd	r6, [sp, #48]
 671:Src/main.c    ****   {
 2068              		.loc 1 671 3 is_stmt 1 view .LVU758
 671:Src/main.c    ****   {
 2069              		.loc 1 671 7 is_stmt 0 view .LVU759
 2070 04ac FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 2071              	.LVL37:
 671:Src/main.c    ****   {
 2072              		.loc 1 671 6 view .LVU760
 2073 04b0 08B1     		cbz	r0, .L57
 673:Src/main.c    ****   }
 2074              		.loc 1 673 5 is_stmt 1 view .LVU761
 2075              	.LBB477:
 2076              	.LBI477:
 782:Src/main.c    **** {
 2077              		.loc 1 782 6 view .LVU762
 2078              	.LBE477:
 2079              	.LBE493:
 2080              	.LBE506:
 786:Src/main.c    ****   while (1)
 2081              		.loc 1 786 3 view .LVU763
 2082              	.LBB507:
 2083              	.LBB494:
 2084              	.LBB480:
 2085              	.LBB478:
 2086              	.LBI478:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2087              		.loc 2 207 27 view .LVU764
 2088              	.LBB479:
 2089              		.loc 2 209 3 view .LVU765
 2090              		.syntax unified
 2091              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2092 04b2 72B6     		cpsid i
 2093              	@ 0 "" 2
 2094              		.thumb
 2095              		.syntax unified
 2096              	.L58:
 2097              	.LBE479:
 2098              	.LBE478:
 2099              	.LBE480:
 2100              	.LBE494:
 2101              	.LBE507:
 787:Src/main.c    ****   {
 2102              		.loc 1 787 3 view .LVU766
ARM GAS  /tmp/cc4xqBG2.s 			page 67


 2103              		.loc 1 789 3 view .LVU767
 787:Src/main.c    ****   {
 2104              		.loc 1 787 3 view .LVU768
 2105              		.loc 1 789 3 view .LVU769
 2106 04b4 FEE7     		b	.L58
 2107              	.L57:
 2108              	.LBB508:
 2109              	.LBB495:
 675:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 2110              		.loc 1 675 3 view .LVU770
 676:Src/main.c    ****   if (HAL_TIM_IC_ConfigChannel(&htim2, &sConfigIC, TIM_CHANNEL_2) != HAL_OK)
 2111              		.loc 1 676 3 view .LVU771
 677:Src/main.c    ****   {
 2112              		.loc 1 677 7 is_stmt 0 view .LVU772
 2113 04b6 2046     		mov	r0, r4
 2114 04b8 0AA9     		add	r1, sp, #40
 675:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 2115              		.loc 1 675 24 view .LVU773
 2116 04ba 0224     		movs	r4, #2
 2117 04bc 0225     		movs	r5, #2
 677:Src/main.c    ****   {
 2118              		.loc 1 677 7 view .LVU774
 2119 04be 0422     		movs	r2, #4
 675:Src/main.c    ****   sConfigIC.ICSelection = TIM_ICSELECTION_INDIRECTTI;
 2120              		.loc 1 675 24 view .LVU775
 2121 04c0 CDE90A45 		strd	r4, [sp, #40]
 677:Src/main.c    ****   {
 2122              		.loc 1 677 3 is_stmt 1 view .LVU776
 677:Src/main.c    ****   {
 2123              		.loc 1 677 7 is_stmt 0 view .LVU777
 2124 04c4 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 2125              	.LVL38:
 677:Src/main.c    ****   {
 2126              		.loc 1 677 6 view .LVU778
 2127 04c8 0346     		mov	r3, r0
 2128 04ca 08B1     		cbz	r0, .L59
 679:Src/main.c    ****   }
 2129              		.loc 1 679 5 is_stmt 1 view .LVU779
 2130              	.LBB481:
 2131              	.LBI481:
 782:Src/main.c    **** {
 2132              		.loc 1 782 6 view .LVU780
 2133              	.LBE481:
 2134              	.LBE495:
 2135              	.LBE508:
 786:Src/main.c    ****   while (1)
 2136              		.loc 1 786 3 view .LVU781
 2137              	.LBB509:
 2138              	.LBB496:
 2139              	.LBB484:
 2140              	.LBB482:
 2141              	.LBI482:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2142              		.loc 2 207 27 view .LVU782
 2143              	.LBB483:
 2144              		.loc 2 209 3 view .LVU783
 2145              		.syntax unified
ARM GAS  /tmp/cc4xqBG2.s 			page 68


 2146              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2147 04cc 72B6     		cpsid i
 2148              	@ 0 "" 2
 2149              		.thumb
 2150              		.syntax unified
 2151              	.L60:
 2152              	.LBE483:
 2153              	.LBE482:
 2154              	.LBE484:
 2155              	.LBE496:
 2156              	.LBE509:
 787:Src/main.c    ****   {
 2157              		.loc 1 787 3 view .LVU784
 2158              		.loc 1 789 3 view .LVU785
 787:Src/main.c    ****   {
 2159              		.loc 1 787 3 view .LVU786
 2160              		.loc 1 789 3 view .LVU787
 2161 04ce FEE7     		b	.L60
 2162              	.L59:
 128:Src/main.c    ****   MX_MotorControl_Init();
 2163              		.loc 1 128 3 view .LVU788
 2164              	.LBB510:
 2165              	.LBI510:
 692:Src/main.c    **** {
 2166              		.loc 1 692 13 view .LVU789
 2167              	.LBB511:
 702:Src/main.c    ****   huart2.Init.BaudRate = 1843200;
 2168              		.loc 1 702 3 view .LVU790
 702:Src/main.c    ****   huart2.Init.BaudRate = 1843200;
 2169              		.loc 1 702 19 is_stmt 0 view .LVU791
 2170 04d0 354C     		ldr	r4, .L73+12
 2171 04d2 364D     		ldr	r5, .L73+16
 704:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2172              		.loc 1 704 26 view .LVU792
 2173 04d4 A060     		str	r0, [r4, #8]
 703:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2174              		.loc 1 703 24 view .LVU793
 2175 04d6 4FF4E111 		mov	r1, #1843200
 707:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2176              		.loc 1 707 20 view .LVU794
 2177 04da 0C22     		movs	r2, #12
 713:Src/main.c    ****   {
 2178              		.loc 1 713 7 view .LVU795
 2179 04dc 2046     		mov	r0, r4
 703:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2180              		.loc 1 703 24 view .LVU796
 2181 04de C4E90051 		strd	r5, r1, [r4]
 704:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2182              		.loc 1 704 3 is_stmt 1 view .LVU797
 705:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 2183              		.loc 1 705 3 view .LVU798
 706:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2184              		.loc 1 706 3 view .LVU799
 707:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2185              		.loc 1 707 3 view .LVU800
 706:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2186              		.loc 1 706 22 is_stmt 0 view .LVU801
ARM GAS  /tmp/cc4xqBG2.s 			page 69


 2187 04e2 C4E90333 		strd	r3, r3, [r4, #12]
 709:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2188              		.loc 1 709 28 view .LVU802
 2189 04e6 C4E90633 		strd	r3, r3, [r4, #24]
 711:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2190              		.loc 1 711 30 view .LVU803
 2191 04ea C4E90833 		strd	r3, r3, [r4, #32]
 712:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2192              		.loc 1 712 38 view .LVU804
 2193 04ee A362     		str	r3, [r4, #40]
 707:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2194              		.loc 1 707 20 view .LVU805
 2195 04f0 6261     		str	r2, [r4, #20]
 708:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2196              		.loc 1 708 3 is_stmt 1 view .LVU806
 709:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2197              		.loc 1 709 3 view .LVU807
 710:Src/main.c    ****   huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 2198              		.loc 1 710 3 view .LVU808
 711:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2199              		.loc 1 711 3 view .LVU809
 712:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2200              		.loc 1 712 3 view .LVU810
 713:Src/main.c    ****   {
 2201              		.loc 1 713 3 view .LVU811
 713:Src/main.c    ****   {
 2202              		.loc 1 713 7 is_stmt 0 view .LVU812
 2203 04f2 FFF7FEFF 		bl	HAL_UART_Init
 2204              	.LVL39:
 713:Src/main.c    ****   {
 2205              		.loc 1 713 6 view .LVU813
 2206 04f6 0146     		mov	r1, r0
 2207 04f8 08B1     		cbz	r0, .L61
 715:Src/main.c    ****   }
 2208              		.loc 1 715 5 is_stmt 1 view .LVU814
 2209              	.LBB512:
 2210              	.LBI512:
 782:Src/main.c    **** {
 2211              		.loc 1 782 6 view .LVU815
 2212              	.LBE512:
 2213              	.LBE511:
 2214              	.LBE510:
 786:Src/main.c    ****   while (1)
 2215              		.loc 1 786 3 view .LVU816
 2216              	.LBB535:
 2217              	.LBB528:
 2218              	.LBB515:
 2219              	.LBB513:
 2220              	.LBI513:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2221              		.loc 2 207 27 view .LVU817
 2222              	.LBB514:
 2223              		.loc 2 209 3 view .LVU818
 2224              		.syntax unified
 2225              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2226 04fa 72B6     		cpsid i
 2227              	@ 0 "" 2
ARM GAS  /tmp/cc4xqBG2.s 			page 70


 2228              		.thumb
 2229              		.syntax unified
 2230              	.L62:
 2231              	.LBE514:
 2232              	.LBE513:
 2233              	.LBE515:
 2234              	.LBE528:
 2235              	.LBE535:
 787:Src/main.c    ****   {
 2236              		.loc 1 787 3 view .LVU819
 2237              		.loc 1 789 3 view .LVU820
 787:Src/main.c    ****   {
 2238              		.loc 1 787 3 view .LVU821
 2239              		.loc 1 789 3 view .LVU822
 2240 04fc FEE7     		b	.L62
 2241              	.L61:
 2242              	.LBB536:
 2243              	.LBB529:
 717:Src/main.c    ****   {
 2244              		.loc 1 717 3 view .LVU823
 717:Src/main.c    ****   {
 2245              		.loc 1 717 7 is_stmt 0 view .LVU824
 2246 04fe 2046     		mov	r0, r4
 2247 0500 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
 2248              	.LVL40:
 717:Src/main.c    ****   {
 2249              		.loc 1 717 6 view .LVU825
 2250 0504 0146     		mov	r1, r0
 2251 0506 08B1     		cbz	r0, .L63
 719:Src/main.c    ****   }
 2252              		.loc 1 719 5 is_stmt 1 view .LVU826
 2253              	.LBB516:
 2254              	.LBI516:
 782:Src/main.c    **** {
 2255              		.loc 1 782 6 view .LVU827
 2256              	.LBE516:
 2257              	.LBE529:
 2258              	.LBE536:
 786:Src/main.c    ****   while (1)
 2259              		.loc 1 786 3 view .LVU828
 2260              	.LBB537:
 2261              	.LBB530:
 2262              	.LBB519:
 2263              	.LBB517:
 2264              	.LBI517:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2265              		.loc 2 207 27 view .LVU829
 2266              	.LBB518:
 2267              		.loc 2 209 3 view .LVU830
 2268              		.syntax unified
 2269              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2270 0508 72B6     		cpsid i
 2271              	@ 0 "" 2
 2272              		.thumb
 2273              		.syntax unified
 2274              	.L64:
 2275              	.LBE518:
ARM GAS  /tmp/cc4xqBG2.s 			page 71


 2276              	.LBE517:
 2277              	.LBE519:
 2278              	.LBE530:
 2279              	.LBE537:
 787:Src/main.c    ****   {
 2280              		.loc 1 787 3 view .LVU831
 2281              		.loc 1 789 3 view .LVU832
 787:Src/main.c    ****   {
 2282              		.loc 1 787 3 view .LVU833
 2283              		.loc 1 789 3 view .LVU834
 2284 050a FEE7     		b	.L64
 2285              	.L63:
 2286              	.LBB538:
 2287              	.LBB531:
 721:Src/main.c    ****   {
 2288              		.loc 1 721 3 view .LVU835
 721:Src/main.c    ****   {
 2289              		.loc 1 721 7 is_stmt 0 view .LVU836
 2290 050c 2046     		mov	r0, r4
 2291 050e FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
 2292              	.LVL41:
 721:Src/main.c    ****   {
 2293              		.loc 1 721 6 view .LVU837
 2294 0512 08B1     		cbz	r0, .L65
 723:Src/main.c    ****   }
 2295              		.loc 1 723 5 is_stmt 1 view .LVU838
 2296              	.LBB520:
 2297              	.LBI520:
 782:Src/main.c    **** {
 2298              		.loc 1 782 6 view .LVU839
 2299              	.LBE520:
 2300              	.LBE531:
 2301              	.LBE538:
 786:Src/main.c    ****   while (1)
 2302              		.loc 1 786 3 view .LVU840
 2303              	.LBB539:
 2304              	.LBB532:
 2305              	.LBB523:
 2306              	.LBB521:
 2307              	.LBI521:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2308              		.loc 2 207 27 view .LVU841
 2309              	.LBB522:
 2310              		.loc 2 209 3 view .LVU842
 2311              		.syntax unified
 2312              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2313 0514 72B6     		cpsid i
 2314              	@ 0 "" 2
 2315              		.thumb
 2316              		.syntax unified
 2317              	.L66:
 2318              	.LBE522:
 2319              	.LBE521:
 2320              	.LBE523:
 2321              	.LBE532:
 2322              	.LBE539:
 787:Src/main.c    ****   {
ARM GAS  /tmp/cc4xqBG2.s 			page 72


 2323              		.loc 1 787 3 view .LVU843
 2324              		.loc 1 789 3 view .LVU844
 787:Src/main.c    ****   {
 2325              		.loc 1 787 3 view .LVU845
 2326              		.loc 1 789 3 view .LVU846
 2327 0516 FEE7     		b	.L66
 2328              	.L65:
 2329              	.LBB540:
 2330              	.LBB533:
 725:Src/main.c    ****   {
 2331              		.loc 1 725 3 view .LVU847
 725:Src/main.c    ****   {
 2332              		.loc 1 725 7 is_stmt 0 view .LVU848
 2333 0518 2046     		mov	r0, r4
 2334 051a FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
 2335              	.LVL42:
 725:Src/main.c    ****   {
 2336              		.loc 1 725 6 view .LVU849
 2337 051e 08B1     		cbz	r0, .L67
 727:Src/main.c    ****   }
 2338              		.loc 1 727 5 is_stmt 1 view .LVU850
 2339              	.LBB524:
 2340              	.LBI524:
 782:Src/main.c    **** {
 2341              		.loc 1 782 6 view .LVU851
 2342              	.LBE524:
 2343              	.LBE533:
 2344              	.LBE540:
 786:Src/main.c    ****   while (1)
 2345              		.loc 1 786 3 view .LVU852
 2346              	.LBB541:
 2347              	.LBB534:
 2348              	.LBB527:
 2349              	.LBB525:
 2350              	.LBI525:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2351              		.loc 2 207 27 view .LVU853
 2352              	.LBB526:
 2353              		.loc 2 209 3 view .LVU854
 2354              		.syntax unified
 2355              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2356 0520 72B6     		cpsid i
 2357              	@ 0 "" 2
 2358              		.thumb
 2359              		.syntax unified
 2360              	.L68:
 2361              	.LBE526:
 2362              	.LBE525:
 2363              	.LBE527:
 2364              	.LBE534:
 2365              	.LBE541:
 787:Src/main.c    ****   {
 2366              		.loc 1 787 3 view .LVU855
 2367              		.loc 1 789 3 view .LVU856
 787:Src/main.c    ****   {
 2368              		.loc 1 787 3 view .LVU857
 2369              		.loc 1 789 3 view .LVU858
ARM GAS  /tmp/cc4xqBG2.s 			page 73


 2370 0522 FEE7     		b	.L68
 2371              	.L67:
 129:Src/main.c    **** 
 2372              		.loc 1 129 3 view .LVU859
 2373 0524 FFF7FEFF 		bl	MX_MotorControl_Init
 2374              	.LVL43:
 132:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2375              		.loc 1 132 3 view .LVU860
 2376              	.LBB542:
 2377              	.LBI542:
 201:Src/main.c    **** {
 2378              		.loc 1 201 13 view .LVU861
 2379              	.LBB543:
 204:Src/main.c    ****   HAL_NVIC_EnableIRQ(USART2_IRQn);
 2380              		.loc 1 204 3 view .LVU862
 2381 0528 0122     		movs	r2, #1
 2382 052a 0321     		movs	r1, #3
 2383 052c 2620     		movs	r0, #38
 2384 052e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 2385              	.LVL44:
 205:Src/main.c    ****   /* DMA1_Channel1_IRQn interrupt configuration */
 2386              		.loc 1 205 3 view .LVU863
 2387 0532 2620     		movs	r0, #38
 2388 0534 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2389              	.LVL45:
 207:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel1_IRQn);
 2390              		.loc 1 207 3 view .LVU864
 2391 0538 0022     		movs	r2, #0
 2392 053a 0321     		movs	r1, #3
 2393 053c 0B20     		movs	r0, #11
 2394 053e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 2395              	.LVL46:
 208:Src/main.c    ****   /* TIM2_IRQn interrupt configuration */
 2396              		.loc 1 208 3 view .LVU865
 2397 0542 0B20     		movs	r0, #11
 2398 0544 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2399              	.LVL47:
 210:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 2400              		.loc 1 210 3 view .LVU866
 2401 0548 0022     		movs	r2, #0
 2402 054a 0321     		movs	r1, #3
 2403 054c 1C20     		movs	r0, #28
 2404 054e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 2405              	.LVL48:
 211:Src/main.c    ****   /* TIM1_BRK_TIM15_IRQn interrupt configuration */
 2406              		.loc 1 211 3 view .LVU867
 2407 0552 1C20     		movs	r0, #28
 2408 0554 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2409              	.LVL49:
 213:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 2410              		.loc 1 213 3 view .LVU868
 2411 0558 0122     		movs	r2, #1
 2412 055a 0421     		movs	r1, #4
 2413 055c 1820     		movs	r0, #24
 2414 055e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 2415              	.LVL50:
 214:Src/main.c    ****   /* TIM1_UP_TIM16_IRQn interrupt configuration */
ARM GAS  /tmp/cc4xqBG2.s 			page 74


 2416              		.loc 1 214 3 view .LVU869
 2417 0562 1820     		movs	r0, #24
 2418 0564 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2419              	.LVL51:
 216:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 2420              		.loc 1 216 3 view .LVU870
 2421 0568 0022     		movs	r2, #0
 2422 056a 1146     		mov	r1, r2
 2423 056c 1920     		movs	r0, #25
 2424 056e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 2425              	.LVL52:
 217:Src/main.c    ****   /* ADC1_2_IRQn interrupt configuration */
 2426              		.loc 1 217 3 view .LVU871
 2427 0572 1920     		movs	r0, #25
 2428 0574 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2429              	.LVL53:
 219:Src/main.c    ****   HAL_NVIC_EnableIRQ(ADC1_2_IRQn);
 2430              		.loc 1 219 3 view .LVU872
 2431 0578 0022     		movs	r2, #0
 2432 057a 0221     		movs	r1, #2
 2433 057c 1220     		movs	r0, #18
 2434 057e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 2435              	.LVL54:
 220:Src/main.c    ****   /* EXTI15_10_IRQn interrupt configuration */
 2436              		.loc 1 220 3 view .LVU873
 2437 0582 1220     		movs	r0, #18
 2438 0584 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2439              	.LVL55:
 222:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 2440              		.loc 1 222 3 view .LVU874
 2441 0588 2820     		movs	r0, #40
 2442 058a 0022     		movs	r2, #0
 2443 058c 0321     		movs	r1, #3
 2444 058e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 2445              	.LVL56:
 223:Src/main.c    **** }
 2446              		.loc 1 223 3 view .LVU875
 2447 0592 2820     		movs	r0, #40
 2448 0594 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 2449              	.LVL57:
 2450              	.L69:
 2451              	.LBE543:
 2452              	.LBE542:
 139:Src/main.c    ****   {
 2453              		.loc 1 139 3 discriminator 1 view .LVU876
 144:Src/main.c    ****   /* USER CODE END 3 */
 2454              		.loc 1 144 3 discriminator 1 view .LVU877
 139:Src/main.c    ****   {
 2455              		.loc 1 139 3 discriminator 1 view .LVU878
 144:Src/main.c    ****   /* USER CODE END 3 */
 2456              		.loc 1 144 3 discriminator 1 view .LVU879
 2457 0598 FEE7     		b	.L69
 2458              	.L74:
 2459 059a 00BF     		.align	2
 2460              	.L73:
 2461 059c 00000000 		.word	htim1
 2462 05a0 002C0140 		.word	1073818624
ARM GAS  /tmp/cc4xqBG2.s 			page 75


 2463 05a4 00000000 		.word	htim2
 2464 05a8 00000000 		.word	huart2
 2465 05ac 00440040 		.word	1073759232
 2466              		.cfi_endproc
 2467              	.LFE1466:
 2469              		.section	.text.Error_Handler,"ax",%progbits
 2470              		.align	1
 2471              		.p2align 2,,3
 2472              		.global	Error_Handler
 2473              		.syntax unified
 2474              		.thumb
 2475              		.thumb_func
 2476              		.fpu fpv4-sp-d16
 2478              	Error_Handler:
 2479              	.LFB1480:
 783:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 2480              		.loc 1 783 1 view -0
 2481              		.cfi_startproc
 2482              		@ Volatile: function does not return.
 2483              		@ args = 0, pretend = 0, frame = 0
 2484              		@ frame_needed = 0, uses_anonymous_args = 0
 2485              		@ link register save eliminated.
 786:Src/main.c    ****   while (1)
 2486              		.loc 1 786 3 view .LVU881
 2487              	.LBB544:
 2488              	.LBI544:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2489              		.loc 2 207 27 view .LVU882
 2490              	.LBB545:
 2491              		.loc 2 209 3 view .LVU883
 2492              		.syntax unified
 2493              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2494 0000 72B6     		cpsid i
 2495              	@ 0 "" 2
 2496              		.thumb
 2497              		.syntax unified
 2498              	.L76:
 2499              	.LBE545:
 2500              	.LBE544:
 787:Src/main.c    ****   {
 2501              		.loc 1 787 3 discriminator 1 view .LVU884
 2502              		.loc 1 789 3 discriminator 1 view .LVU885
 787:Src/main.c    ****   {
 2503              		.loc 1 787 3 discriminator 1 view .LVU886
 2504              		.loc 1 789 3 discriminator 1 view .LVU887
 2505 0002 FEE7     		b	.L76
 2506              		.cfi_endproc
 2507              	.LFE1480:
 2509              		.comm	hdma_usart2_tx,96,4
 2510              		.comm	hdma_usart2_rx,96,4
 2511              		.comm	huart2,148,4
 2512              		.comm	htim2,76,4
 2513              		.comm	htim1,76,4
 2514              		.comm	hopamp3,60,4
 2515              		.comm	hopamp2,60,4
 2516              		.comm	hopamp1,60,4
 2517              		.comm	hcordic,40,4
ARM GAS  /tmp/cc4xqBG2.s 			page 76


 2518              		.comm	hadc2,108,4
 2519              		.comm	hadc1,108,4
 2520              		.text
 2521              	.Letext0:
 2522              		.file 3 "/usr/lib/gcc/arm-none-eabi/8.3.1/include/stdint.h"
 2523              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2524              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 2525              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g431xx.h"
 2526              		.file 7 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 2527              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 2528              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 2529              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 2530              		.file 11 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_dma.h"
 2531              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc.h"
 2532              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_adc_ex.h"
 2533              		.file 14 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cordic.h"
 2534              		.file 15 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 2535              		.file 16 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_opamp.h"
 2536              		.file 17 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim.h"
 2537              		.file 18 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart.h"
 2538              		.file 19 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 2539              		.file 20 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_tim.h"
 2540              		.file 21 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 2541              		.file 22 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 2542              		.file 23 "Inc/mc_type.h"
 2543              		.file 24 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pid_regulator.h"
 2544              		.file 25 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_pos_fdbk.h"
 2545              		.file 26 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/speed_torq_ctrl.h"
 2546              		.file 27 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/virtual_speed_sensor.h"
 2547              		.file 28 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_speed_pos_fdbk.h"
 2548              		.file 29 "Inc/pwm_curr_fdbk.h"
 2549              		.file 30 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/revup_ctrl.h"
 2550              		.file 31 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/ntc_temperature_sensor.h"
 2551              		.file 32 "Inc/mc_interface.h"
 2552              		.file 33 "Inc/mc_configuration_registers.h"
 2553              		.file 34 "Inc/regular_conversion_manager.h"
 2554              		.file 35 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/bus_voltage_sensor.h"
 2555              		.file 36 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/r_divider_bus_voltage_sensor.h"
 2556              		.file 37 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/esc.h"
 2557              		.file 38 "Inc/mc_config_common.h"
 2558              		.file 39 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/pqd_motor_power_measurement.h"
 2559              		.file 40 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/G4xx/Inc/r3_2_g4xx_pwm_curr_fdbk.h"
 2560              		.file 41 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/ramp_ext_mngr.h"
 2561              		.file 42 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/circle_limitation.h"
 2562              		.file 43 "MCSDK_v6.3.0-Full/MotorControl/MCSDK/MCLib/Any/Inc/sto_pll_speed_pos_fdbk.h"
 2563              		.file 44 "Inc/mc_config.h"
 2564              		.file 45 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 2565              		.file 46 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_tim_ex.h"
 2566              		.file 47 "Inc/main.h"
 2567              		.file 48 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_uart_ex.h"
 2568              		.file 49 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_cortex.h"
 2569              		.file 50 "Inc/motorcontrol.h"
 2570              		.file 51 "<built-in>"
ARM GAS  /tmp/cc4xqBG2.s 			page 77


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cc4xqBG2.s:18     .text.SystemClock_Config:0000000000000000 $t
     /tmp/cc4xqBG2.s:27     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/cc4xqBG2.s:202    .text.startup.main:0000000000000000 $t
     /tmp/cc4xqBG2.s:210    .text.startup.main:0000000000000000 main
     /tmp/cc4xqBG2.s:1330   .text.startup.main:00000000000002c0 $d
                            *COM*:000000000000006c hadc1
                            *COM*:000000000000006c hadc2
                            *COM*:0000000000000028 hcordic
                            *COM*:000000000000003c hopamp1
                            *COM*:000000000000003c hopamp2
                            *COM*:000000000000003c hopamp3
     /tmp/cc4xqBG2.s:1358   .text.startup.main:0000000000000310 $t
     /tmp/cc4xqBG2.s:2461   .text.startup.main:000000000000059c $d
                            *COM*:000000000000004c htim1
                            *COM*:000000000000004c htim2
                            *COM*:0000000000000094 huart2
     /tmp/cc4xqBG2.s:2470   .text.Error_Handler:0000000000000000 $t
     /tmp/cc4xqBG2.s:2478   .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000060 hdma_usart2_tx
                            *COM*:0000000000000060 hdma_usart2_rx

UNDEFINED SYMBOLS
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_EnableCSS
HAL_Init
HAL_GPIO_Init
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADCEx_InjectedConfigChannel
HAL_ADC_ConfigChannel
HAL_CORDIC_Init
HAL_OPAMP_Init
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_TIM_Base_Init
HAL_TIM_IC_Init
HAL_TIM_SlaveConfigSynchro
HAL_TIM_IC_ConfigChannel
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
MX_MotorControl_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
